<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="340" passed="339">
  <reporter-output>
  </reporter-output>
  <suite name="Cling Core - All Tests" duration-ms="74026" started-at="2017-11-29T17:20:18Z" finished-at="2017-11-29T17:21:32Z">
    <groups>
    </groups>
    <test name="Service" duration-ms="6" started-at="2017-11-29T17:20:18Z" finished-at="2017-11-29T17:20:18Z">
    </test> <!-- Service -->
    <test name="Model" duration-ms="566" started-at="2017-11-29T17:20:18Z" finished-at="2017-11-29T17:20:19Z">
      <class name="org.fourthline.cling.test.model.IconTest">
        <test-method status="PASS" signature="invalidIcons()[pri:0, instance:org.fourthline.cling.test.model.IconTest@ea639]" name="invalidIcons" duration-ms="2" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidIcons -->
        <test-method status="PASS" signature="validIcons()[pri:0, instance:org.fourthline.cling.test.model.IconTest@ea639]" name="validIcons" duration-ms="9" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validIcons -->
      </class> <!-- org.fourthline.cling.test.model.IconTest -->
      <class name="org.fourthline.cling.test.model.HeaderParsingTest">
        <test-method status="PASS" signature="parseCallbackHeaderString()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseCallbackHeaderString" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseCallbackHeaderString -->
        <test-method status="PASS" signature="parseContentRange()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseContentRange" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseContentRange -->
        <test-method status="PASS" signature="parseContentTypeHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseContentTypeHeader" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseContentTypeHeader -->
        <test-method status="PASS" signature="parseDeviceType()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseDeviceType" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseDeviceType -->
        <test-method status="PASS" signature="parseDeviceTypeHeaderURI()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseDeviceTypeHeaderURI" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseDeviceTypeHeaderURI -->
        <test-method status="PASS" signature="parseDeviceUSNHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseDeviceUSNHeader" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseDeviceUSNHeader -->
        <test-method status="PASS" signature="parseEventSequenceHeaderString()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseEventSequenceHeaderString" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseEventSequenceHeaderString -->
        <test-method status="PASS" signature="parseDeviceUSNHeaderStatic()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseDeviceUSNHeaderStatic" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseDeviceUSNHeaderStatic -->
        <test-method status="PASS" signature="parseHostHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseHostHeader" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseHostHeader -->
        <test-method status="PASS" signature="parseHostHeaderConstructor()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseHostHeaderConstructor" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseHostHeaderConstructor -->
        <test-method status="PASS" signature="parseInterfaceMacAddress()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInterfaceMacAddress" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInterfaceMacAddress -->
        <test-method status="PASS" signature="parseInvalidCallbackHeaderString()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidCallbackHeaderString" duration-ms="7" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidCallbackHeaderString -->
        <test-method status="PASS" signature="parseInvalidDeviceTypeHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidDeviceTypeHeader" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidDeviceTypeHeader -->
        <test-method status="PASS" signature="parseInvalidDeviceUSNHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidDeviceUSNHeader" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="org.fourthline.cling.model.message.header.InvalidHeaderException">
            <message>
              <![CDATA[Invalid device USN header value, Can't parse UDN::DeviceType from: uuid:MY-DEVICE-123--urn:schemas-upnp-org:device:MY-DEVICE-TYPE:1]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.message.header.InvalidHeaderException: Invalid device USN header value, Can't parse UDN::DeviceType from: uuid:MY-DEVICE-123--urn:schemas-upnp-org:device:MY-DEVICE-TYPE:1
	at org.fourthline.cling.model.message.header.DeviceUSNHeader.setString(DeviceUSNHeader.java:42)
	at org.fourthline.cling.test.model.HeaderParsingTest.parseInvalidDeviceUSNHeader(HeaderParsingTest.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.message.header.InvalidHeaderException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidDeviceUSNHeader -->
        <test-method status="PASS" signature="parseInvalidEXTHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidEXTHeader" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="org.fourthline.cling.model.message.header.InvalidHeaderException">
            <message>
              <![CDATA[Invalid EXT header, it has no value: MUST BE EMPTY STRING]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.message.header.InvalidHeaderException: Invalid EXT header, it has no value: MUST BE EMPTY STRING
	at org.fourthline.cling.model.message.header.EXTHeader.setString(EXTHeader.java:32)
	at org.fourthline.cling.test.model.HeaderParsingTest.parseInvalidEXTHeader(HeaderParsingTest.java:105)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.message.header.InvalidHeaderException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidEXTHeader -->
        <test-method status="PASS" signature="parseInvalidHostHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidHostHeader" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="org.fourthline.cling.model.message.header.InvalidHeaderException">
            <message>
              <![CDATA[Invalid HOST header value, can't parse port: foo.bar:abc - For input string: "abc"]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.message.header.InvalidHeaderException: Invalid HOST header value, can't parse port: foo.bar:abc - For input string: "abc"
	at org.fourthline.cling.model.message.header.HostHeader.setString(HostHeader.java:50)
	at org.fourthline.cling.test.model.HeaderParsingTest.parseInvalidHostHeader(HeaderParsingTest.java:139)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.message.header.InvalidHeaderException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidHostHeader -->
        <test-method status="PASS" signature="parseInvalidLocationHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidLocationHeader" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="org.fourthline.cling.model.message.header.InvalidHeaderException">
            <message>
              <![CDATA[Invalid URI: unknown protocol: this]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.message.header.InvalidHeaderException: Invalid URI: unknown protocol: this
	at org.fourthline.cling.model.message.header.LocationHeader.setString(LocationHeader.java:46)
	at org.fourthline.cling.test.model.HeaderParsingTest.parseInvalidLocationHeader(HeaderParsingTest.java:145)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.message.header.InvalidHeaderException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidLocationHeader -->
        <test-method status="PASS" signature="parseInvalidMANHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidMANHeader" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="org.fourthline.cling.model.message.header.InvalidHeaderException">
            <message>
              <![CDATA[Invalid namespace in MAN header value: "foo.bar"; ns = baz]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.message.header.InvalidHeaderException: Invalid namespace in MAN header value: "foo.bar"; ns = baz
	at org.fourthline.cling.model.message.header.MANHeader.setString(MANHeader.java:54)
	at org.fourthline.cling.test.model.HeaderParsingTest.parseInvalidMANHeader(HeaderParsingTest.java:151)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.message.header.InvalidHeaderException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidMANHeader -->
        <test-method status="PASS" signature="parseInvalidMXHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidMXHeader" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="org.fourthline.cling.model.message.header.InvalidHeaderException">
            <message>
              <![CDATA[Can't parse MX seconds integer from: abc]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.message.header.InvalidHeaderException: Can't parse MX seconds integer from: abc
	at org.fourthline.cling.model.message.header.MXHeader.setString(MXHeader.java:42)
	at org.fourthline.cling.test.model.HeaderParsingTest.parseInvalidMXHeader(HeaderParsingTest.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.message.header.InvalidHeaderException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidMXHeader -->
        <test-method status="PASS" signature="parseInvalidMaxAgeHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidMaxAgeHeader" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="org.fourthline.cling.model.message.header.InvalidHeaderException">
            <message>
              <![CDATA[Invalid cache-control value, can't parse max-age seconds: max-foo=123]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.message.header.InvalidHeaderException: Invalid cache-control value, can't parse max-age seconds: max-foo=123
	at org.fourthline.cling.model.message.header.MaxAgeHeader.setString(MaxAgeHeader.java:44)
	at org.fourthline.cling.test.model.HeaderParsingTest.parseInvalidMaxAgeHeader(HeaderParsingTest.java:182)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.message.header.InvalidHeaderException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidMaxAgeHeader -->
        <test-method status="PASS" signature="parseInvalidNTSHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidNTSHeader" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="org.fourthline.cling.model.message.header.InvalidHeaderException">
            <message>
              <![CDATA[Invalid NTS header value: foo]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.message.header.InvalidHeaderException: Invalid NTS header value: foo
	at org.fourthline.cling.model.message.header.NTSHeader.setString(NTSHeader.java:40)
	at org.fourthline.cling.test.model.HeaderParsingTest.parseInvalidNTSHeader(HeaderParsingTest.java:206)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.message.header.InvalidHeaderException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidNTSHeader -->
        <test-method status="PASS" signature="parseInvalidRootDeviceHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidRootDeviceHeader" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="org.fourthline.cling.model.message.header.InvalidHeaderException">
            <message>
              <![CDATA[Invalid root device NT header value: upnp:foodevice]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.message.header.InvalidHeaderException: Invalid root device NT header value: upnp:foodevice
	at org.fourthline.cling.model.message.header.RootDeviceHeader.setString(RootDeviceHeader.java:31)
	at org.fourthline.cling.test.model.HeaderParsingTest.parseInvalidRootDeviceHeader(HeaderParsingTest.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.message.header.InvalidHeaderException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidRootDeviceHeader -->
        <test-method status="PASS" signature="parseInvalidSTAllHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidSTAllHeader" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="org.fourthline.cling.model.message.header.InvalidHeaderException">
            <message>
              <![CDATA[Invalid ST header value (not ALL): ssdp:foo]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.message.header.InvalidHeaderException: Invalid ST header value (not ALL): ssdp:foo
	at org.fourthline.cling.model.message.header.STAllHeader.setString(STAllHeader.java:31)
	at org.fourthline.cling.test.model.HeaderParsingTest.parseInvalidSTAllHeader(HeaderParsingTest.java:334)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.message.header.InvalidHeaderException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidSTAllHeader -->
        <test-method status="PASS" signature="parseInvalidServerHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidServerHeader" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="org.fourthline.cling.model.message.header.InvalidHeaderException">
            <message>
              <![CDATA[Missing 'UPnP/1.' in server information: foo/1 baz/123 bar/2]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.message.header.InvalidHeaderException: Missing 'UPnP/1.' in server information: foo/1 baz/123 bar/2
	at org.fourthline.cling.model.message.header.ServerHeader.setString(ServerHeader.java:50)
	at org.fourthline.cling.test.model.HeaderParsingTest.parseInvalidServerHeader(HeaderParsingTest.java:271)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.message.header.InvalidHeaderException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidServerHeader -->
        <test-method status="PASS" signature="parseInvalidServiceTypeHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidServiceTypeHeader" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidServiceTypeHeader -->
        <test-method status="PASS" signature="parseInvalidServiceUSNHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidServiceUSNHeader" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="org.fourthline.cling.model.message.header.InvalidHeaderException">
            <message>
              <![CDATA[Invalid service USN header value, Can't parse UDN::ServiceType from: uuid:MY-SERVICE-123--urn:schemas-upnp-org:service:MY-SERVICE-TYPE:1]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.message.header.InvalidHeaderException: Invalid service USN header value, Can't parse UDN::ServiceType from: uuid:MY-SERVICE-123--urn:schemas-upnp-org:service:MY-SERVICE-TYPE:1
	at org.fourthline.cling.model.message.header.ServiceUSNHeader.setString(ServiceUSNHeader.java:42)
	at org.fourthline.cling.test.model.HeaderParsingTest.parseInvalidServiceUSNHeader(HeaderParsingTest.java:328)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.message.header.InvalidHeaderException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidServiceUSNHeader -->
        <test-method status="PASS" signature="parseInvalidSubscriptionIdHeaderString()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidSubscriptionIdHeaderString" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="org.fourthline.cling.model.message.header.InvalidHeaderException">
            <message>
              <![CDATA[Invalid subscription ID header value, must start with 'uuid:': abc:123-123-123-123]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.message.header.InvalidHeaderException: Invalid subscription ID header value, must start with 'uuid:': abc:123-123-123-123
	at org.fourthline.cling.model.message.header.SubscriptionIdHeader.setString(SubscriptionIdHeader.java:34)
	at org.fourthline.cling.test.model.HeaderParsingTest.parseInvalidSubscriptionIdHeaderString(HeaderParsingTest.java:490)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.message.header.InvalidHeaderException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidSubscriptionIdHeaderString -->
        <test-method status="PASS" signature="parseInvalidUDADeviceTypeHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidUDADeviceTypeHeader" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="org.fourthline.cling.model.message.header.InvalidHeaderException">
            <message>
              <![CDATA[Invalid UDA device type header value, Can't parse UDA device type string (namespace/type/version): urn:foo-bar:device:!@#:123]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.message.header.InvalidHeaderException: Invalid UDA device type header value, Can't parse UDA device type string (namespace/type/version): urn:foo-bar:device:!@#:123
	at org.fourthline.cling.model.message.header.UDADeviceTypeHeader.setString(UDADeviceTypeHeader.java:44)
	at org.fourthline.cling.test.model.HeaderParsingTest.parseInvalidUDADeviceTypeHeader(HeaderParsingTest.java:340)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.message.header.InvalidHeaderException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidUDADeviceTypeHeader -->
        <test-method status="PASS" signature="parseInvalidUDAServiceTypeHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidUDAServiceTypeHeader" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="org.fourthline.cling.model.message.header.InvalidHeaderException">
            <message>
              <![CDATA[Invalid UDA service type header value, Can't parse UDA service type string (namespace/type/version): urn:foo-bar:service:!@#:123]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.message.header.InvalidHeaderException: Invalid UDA service type header value, Can't parse UDA service type string (namespace/type/version): urn:foo-bar:service:!@#:123
	at org.fourthline.cling.model.message.header.UDAServiceTypeHeader.setString(UDAServiceTypeHeader.java:43)
	at org.fourthline.cling.test.model.HeaderParsingTest.parseInvalidUDAServiceTypeHeader(HeaderParsingTest.java:355)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.message.header.InvalidHeaderException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidUDAServiceTypeHeader -->
        <test-method status="PASS" signature="parseInvalidUDNHeaderURN()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidUDNHeaderURN" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="org.fourthline.cling.model.message.header.InvalidHeaderException">
            <message>
              <![CDATA[Invalid UDA header value, must not contain '::urn': uuid:MY-UUID-1234::urn:foo-bar:baz]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.message.header.InvalidHeaderException: Invalid UDA header value, must not contain '::urn': uuid:MY-UUID-1234::urn:foo-bar:baz
	at org.fourthline.cling.model.message.header.UDNHeader.setString(UDNHeader.java:38)
	at org.fourthline.cling.test.model.HeaderParsingTest.parseInvalidUDNHeaderURN(HeaderParsingTest.java:384)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.message.header.InvalidHeaderException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidUDNHeaderURN -->
        <test-method status="PASS" signature="parseInvalidUDNHeaderPrefix()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidUDNHeaderPrefix" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="org.fourthline.cling.model.message.header.InvalidHeaderException">
            <message>
              <![CDATA[Invalid UDA header value, must start with 'uuid:': MY-UUID-1234]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.message.header.InvalidHeaderException: Invalid UDA header value, must start with 'uuid:': MY-UUID-1234
	at org.fourthline.cling.model.message.header.UDNHeader.setString(UDNHeader.java:34)
	at org.fourthline.cling.test.model.HeaderParsingTest.parseInvalidUDNHeaderPrefix(HeaderParsingTest.java:378)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.message.header.InvalidHeaderException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidUDNHeaderPrefix -->
        <test-method status="PASS" signature="parseInvalidUSNRootDeviceHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseInvalidUSNRootDeviceHeader" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="org.fourthline.cling.model.message.header.InvalidHeaderException">
            <message>
              <![CDATA[Invalid root device USN header value, must start with 'uuid:' and end with '::upnp:rootdevice' but is 'uuid:MY-UUID-1234::upnp:rootfoo']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.message.header.InvalidHeaderException: Invalid root device USN header value, must start with 'uuid:' and end with '::upnp:rootdevice' but is 'uuid:MY-UUID-1234::upnp:rootfoo'
	at org.fourthline.cling.model.message.header.USNRootDeviceHeader.setString(USNRootDeviceHeader.java:36)
	at org.fourthline.cling.test.model.HeaderParsingTest.parseInvalidUSNRootDeviceHeader(HeaderParsingTest.java:390)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.message.header.InvalidHeaderException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidUSNRootDeviceHeader -->
        <test-method status="PASS" signature="parseMANHeaderNS()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseMANHeaderNS" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseMANHeaderNS -->
        <test-method status="PASS" signature="parseMANHeaderNoNS()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseMANHeaderNoNS" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseMANHeaderNoNS -->
        <test-method status="PASS" signature="parseMXHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseMXHeader" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseMXHeader -->
        <test-method status="PASS" signature="parseMaxAgeHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseMaxAgeHeader" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseMaxAgeHeader -->
        <test-method status="PASS" signature="parsePragma()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parsePragma" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parsePragma -->
        <test-method status="PASS" signature="parseServerHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseServerHeader" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseServerHeader -->
        <test-method status="PASS" signature="parseRange()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseRange" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseRange -->
        <test-method status="PASS" signature="parseServiceTypeHeaderURI()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseServiceTypeHeaderURI" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseServiceTypeHeaderURI -->
        <test-method status="PASS" signature="parseServiceType()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseServiceType" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseServiceType -->
        <test-method status="PASS" signature="parseServiceUSNHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseServiceUSNHeader" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseServiceUSNHeader -->
        <test-method status="PASS" signature="parseSoapActionHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseSoapActionHeader" duration-ms="2" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseSoapActionHeader -->
        <test-method status="PASS" signature="parseServiceUSNHeaderStatic()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseServiceUSNHeaderStatic" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseServiceUSNHeaderStatic -->
        <test-method status="PASS" signature="parseSoapActionHeaderQueryString()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseSoapActionHeaderQueryString" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseSoapActionHeaderQueryString -->
        <test-method status="PASS" signature="parseSoapActionHeaderString()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseSoapActionHeaderString" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseSoapActionHeaderString -->
        <test-method status="PASS" signature="parseUDADeviceType()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseUDADeviceType" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseUDADeviceType -->
        <test-method status="PASS" signature="parseTimeoutHeaderString()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseTimeoutHeaderString" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseTimeoutHeaderString -->
        <test-method status="PASS" signature="parseSubscriptionIdHeaderString()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseSubscriptionIdHeaderString" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseSubscriptionIdHeaderString -->
        <test-method status="PASS" signature="parseUDAServiceType()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseUDAServiceType" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseUDAServiceType -->
        <test-method status="PASS" signature="parseUDADeviceTypeHeaderURI()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseUDADeviceTypeHeaderURI" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseUDADeviceTypeHeaderURI -->
        <test-method status="PASS" signature="parseUDNHeader()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseUDNHeader" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseUDNHeader -->
        <test-method status="PASS" signature="parseUDAServiceTypeHeaderURI()[pri:0, instance:org.fourthline.cling.test.model.HeaderParsingTest@17f6480]" name="parseUDAServiceTypeHeaderURI" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseUDAServiceTypeHeaderURI -->
      </class> <!-- org.fourthline.cling.test.model.HeaderParsingTest -->
      <class name="org.fourthline.cling.test.model.IncompatibilityTest">
        <test-method status="PASS" signature="invalidStateVarDefaultValue()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="invalidStateVarDefaultValue" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidStateVarDefaultValue -->
        <test-method status="PASS" signature="invalidIntegerValue()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="invalidIntegerValue" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidIntegerValue -->
        <test-method status="PASS" signature="parseBrokenServiceType()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="parseBrokenServiceType" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseBrokenServiceType -->
        <test-method status="PASS" signature="parseBrokenServiceId()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="parseBrokenServiceId" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseBrokenServiceId -->
        <test-method status="PASS" signature="parseCeytonInfiniTVServiceType()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="parseCeytonInfiniTVServiceType" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseCeytonInfiniTVServiceType -->
        <test-method status="PASS" signature="parseEscientDeviceType()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="parseEscientDeviceType" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseEscientDeviceType -->
        <test-method status="PASS" signature="parseEyeTVDeviceType()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="parseEyeTVDeviceType" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseEyeTVDeviceType -->
        <test-method status="PASS" signature="parseEyeTVServiceType()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="parseEyeTVServiceType" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseEyeTVServiceType -->
        <test-method status="PASS" signature="parseEyeconServiceId()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="parseEyeconServiceId" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseEyeconServiceId -->
        <test-method status="PASS" signature="parseKodakServiceId()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="parseKodakServiceId" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseKodakServiceId -->
        <test-method status="PASS" signature="parseInvalidDLNADoc()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="parseInvalidDLNADoc" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidDLNADoc -->
        <test-method status="PASS" signature="parseServiceNameAsServiceId()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="parseServiceNameAsServiceId" duration-ms="3" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseServiceNameAsServiceId -->
        <test-method status="PASS" signature="parseUDADeviceTypeFractions()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="parseUDADeviceTypeFractions" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseUDADeviceTypeFractions -->
        <test-method status="PASS" signature="readColonRelativePaths()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="readColonRelativePaths" duration-ms="11" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readColonRelativePaths -->
        <test-method status="PASS" signature="switchedMinimumMaximumValueRange()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="switchedMinimumMaximumValueRange" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- switchedMinimumMaximumValueRange -->
        <test-method status="PASS" signature="validateAzureusServiceId()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="validateAzureusServiceId" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAzureusServiceId -->
        <test-method status="PASS" signature="validateCallbackURILength()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="validateCallbackURILength" duration-ms="217" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCallbackURILength -->
        <test-method status="PASS" signature="validateMSFTServiceType()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="validateMSFTServiceType" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMSFTServiceType -->
        <test-method status="PASS" signature="validatePSAudioBridgeServiceId()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="validatePSAudioBridgeServiceId" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePSAudioBridgeServiceId -->
        <test-method status="PASS" signature="validateIntelServiceId()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="validateIntelServiceId" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateIntelServiceId -->
        <test-method status="PASS" signature="validateSpacesInServiceType()[pri:0, instance:org.fourthline.cling.test.model.IncompatibilityTest@16e8792]" name="validateSpacesInServiceType" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSpacesInServiceType -->
      </class> <!-- org.fourthline.cling.test.model.IncompatibilityTest -->
      <class name="org.fourthline.cling.test.model.UtilTest">
        <test-method status="PASS" signature="csvToString()[pri:0, instance:org.fourthline.cling.test.model.UtilTest@ac6e3]" name="csvToString" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- csvToString -->
        <test-method status="PASS" signature="parseInvalidTimeString()[pri:0, instance:org.fourthline.cling.test.model.UtilTest@ac6e3]" name="parseInvalidTimeString" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Can't parse time string: 00-00:11]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Can't parse time string: 00-00:11
	at org.fourthline.cling.model.ModelUtil.fromTimeString(ModelUtil.java:192)
	at org.fourthline.cling.test.model.UtilTest.parseInvalidTimeString(UtilTest.java:280)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseInvalidTimeString -->
        <test-method status="PASS" signature="parseTimeStrings()[pri:0, instance:org.fourthline.cling.test.model.UtilTest@ac6e3]" name="parseTimeStrings" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseTimeStrings -->
        <test-method status="PASS" signature="printDOM1()[pri:0, instance:org.fourthline.cling.test.model.UtilTest@ac6e3]" name="printDOM1" duration-ms="46" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printDOM1 -->
        <test-method status="PASS" signature="printDOM2()[pri:0, instance:org.fourthline.cling.test.model.UtilTest@ac6e3]" name="printDOM2" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printDOM2 -->
        <test-method status="PASS" signature="printDOM3()[pri:0, instance:org.fourthline.cling.test.model.UtilTest@ac6e3]" name="printDOM3" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printDOM3 -->
        <test-method status="PASS" signature="printDOM4()[pri:0, instance:org.fourthline.cling.test.model.UtilTest@ac6e3]" name="printDOM4" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printDOM4 -->
        <test-method status="PASS" signature="printDOM5()[pri:0, instance:org.fourthline.cling.test.model.UtilTest@ac6e3]" name="printDOM5" duration-ms="5" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printDOM5 -->
        <test-method status="PASS" signature="printDOM6()[pri:0, instance:org.fourthline.cling.test.model.UtilTest@ac6e3]" name="printDOM6" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printDOM6 -->
        <test-method status="PASS" signature="printDOM7()[pri:0, instance:org.fourthline.cling.test.model.UtilTest@ac6e3]" name="printDOM7" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printDOM7 -->
        <test-method status="PASS" signature="stringToCsv()[pri:0, instance:org.fourthline.cling.test.model.UtilTest@ac6e3]" name="stringToCsv" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stringToCsv -->
        <test-method status="PASS" signature="validUDAName()[pri:0, instance:org.fourthline.cling.test.model.UtilTest@ac6e3]" name="validUDAName" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validUDAName -->
      </class> <!-- org.fourthline.cling.test.model.UtilTest -->
      <class name="org.fourthline.cling.test.model.DatatypesTest">
        <test-method status="PASS" signature="base64()[pri:0, instance:org.fourthline.cling.test.model.DatatypesTest@1a6e353]" name="base64" duration-ms="6" started-at="2017-11-30T00:20:18Z" finished-at="2017-11-30T00:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- base64 -->
        <test-method status="PASS" signature="caseSensitivity()[pri:0, instance:org.fourthline.cling.test.model.DatatypesTest@1a6e353]" name="caseSensitivity" duration-ms="0" started-at="2017-11-30T00:20:18Z" finished-at="2017-11-30T00:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- caseSensitivity -->
        <test-method status="PASS" signature="dateAndTime()[pri:0, instance:org.fourthline.cling.test.model.DatatypesTest@1a6e353]" name="dateAndTime" duration-ms="6" started-at="2017-11-30T00:20:18Z" finished-at="2017-11-30T00:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dateAndTime -->
        <test-method status="PASS" signature="dateAndTimeWithZone()[pri:0, instance:org.fourthline.cling.test.model.DatatypesTest@1a6e353]" name="dateAndTimeWithZone" duration-ms="2" started-at="2017-11-30T00:20:18Z" finished-at="2017-11-30T00:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dateAndTimeWithZone -->
        <test-method status="PASS" signature="invalidUnsignedIntegersOne()[pri:0, instance:org.fourthline.cling.test.model.DatatypesTest@1a6e353]" name="invalidUnsignedIntegersOne" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="org.fourthline.cling.model.types.InvalidValueException">
            <message>
              <![CDATA[Can't convert string to number or not in range: 256]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.types.InvalidValueException: Can't convert string to number or not in range: 256
	at org.fourthline.cling.model.types.UnsignedIntegerOneByteDatatype.valueOf(UnsignedIntegerOneByteDatatype.java:28)
	at org.fourthline.cling.test.model.DatatypesTest.invalidUnsignedIntegersOne(DatatypesTest.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: java.lang.NumberFormatException: Value must be between 0 and 255: 256
	at org.fourthline.cling.model.types.UnsignedVariableInteger.isInRange(UnsignedVariableInteger.java:77)
	at org.fourthline.cling.model.types.UnsignedVariableInteger.setValue(UnsignedVariableInteger.java:66)
	at org.fourthline.cling.model.types.UnsignedVariableInteger.<init>(UnsignedVariableInteger.java:62)
	at org.fourthline.cling.model.types.UnsignedIntegerOneByte.<init>(UnsignedIntegerOneByte.java:28)
	at org.fourthline.cling.model.types.UnsignedIntegerOneByteDatatype.valueOf(UnsignedIntegerOneByteDatatype.java:26)
	... 28 more
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.types.InvalidValueException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUnsignedIntegersOne -->
        <test-method status="PASS" signature="invalidUnsignedIntegersTwo()[pri:0, instance:org.fourthline.cling.test.model.DatatypesTest@1a6e353]" name="invalidUnsignedIntegersTwo" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <exception class="org.fourthline.cling.model.types.InvalidValueException">
            <message>
              <![CDATA[Can't convert string to number or not in range: 65536]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.types.InvalidValueException: Can't convert string to number or not in range: 65536
	at org.fourthline.cling.model.types.UnsignedIntegerTwoBytesDatatype.valueOf(UnsignedIntegerTwoBytesDatatype.java:28)
	at org.fourthline.cling.test.model.DatatypesTest.invalidUnsignedIntegersTwo(DatatypesTest.java:80)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: java.lang.NumberFormatException: Value must be between 0 and 65535: 65536
	at org.fourthline.cling.model.types.UnsignedVariableInteger.isInRange(UnsignedVariableInteger.java:77)
	at org.fourthline.cling.model.types.UnsignedVariableInteger.setValue(UnsignedVariableInteger.java:66)
	at org.fourthline.cling.model.types.UnsignedVariableInteger.<init>(UnsignedVariableInteger.java:62)
	at org.fourthline.cling.model.types.UnsignedIntegerTwoBytes.<init>(UnsignedIntegerTwoBytes.java:28)
	at org.fourthline.cling.model.types.UnsignedIntegerTwoBytesDatatype.valueOf(UnsignedIntegerTwoBytesDatatype.java:26)
	... 28 more
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.types.InvalidValueException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUnsignedIntegersTwo -->
        <test-method status="PASS" signature="parseDLNADoc()[pri:0, instance:org.fourthline.cling.test.model.DatatypesTest@1a6e353]" name="parseDLNADoc" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseDLNADoc -->
        <test-method status="PASS" signature="signedIntegers()[pri:0, instance:org.fourthline.cling.test.model.DatatypesTest@1a6e353]" name="signedIntegers" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signedIntegers -->
        <test-method status="PASS" signature="simpleCSV()[pri:0, instance:org.fourthline.cling.test.model.DatatypesTest@1a6e353]" name="simpleCSV" duration-ms="6" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleCSV -->
        <test-method status="PASS" signature="timeWithZone()[pri:0, instance:org.fourthline.cling.test.model.DatatypesTest@1a6e353]" name="timeWithZone" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeWithZone -->
        <test-method status="PASS" signature="time()[pri:0, instance:org.fourthline.cling.test.model.DatatypesTest@1a6e353]" name="time" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- time -->
        <test-method status="PASS" signature="upperLowerCase()[pri:0, instance:org.fourthline.cling.test.model.DatatypesTest@1a6e353]" name="upperLowerCase" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- upperLowerCase -->
        <test-method status="PASS" signature="validUnsignedIntegers()[pri:0, instance:org.fourthline.cling.test.model.DatatypesTest@1a6e353]" name="validUnsignedIntegers" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validUnsignedIntegers -->
        <test-method status="PASS" signature="valueOfDouble()[pri:0, instance:org.fourthline.cling.test.model.DatatypesTest@1a6e353]" name="valueOfDouble" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valueOfDouble -->
        <test-method status="PASS" signature="valueOfFloat()[pri:0, instance:org.fourthline.cling.test.model.DatatypesTest@1a6e353]" name="valueOfFloat" duration-ms="0" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valueOfFloat -->
      </class> <!-- org.fourthline.cling.test.model.DatatypesTest -->
      <class name="org.fourthline.cling.test.model.LocalServiceBindingDatatypesTest">
        <test-method status="PASS" signature="validateBinding(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:org.fourthline.cling.test.model.LocalServiceBindingDatatypesTest@1829d67]" name="validateBinding" duration-ms="1" started-at="2017-11-30T00:20:19Z" data-provider="devices" finished-at="2017-11-30T00:20:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBinding -->
      </class> <!-- org.fourthline.cling.test.model.LocalServiceBindingDatatypesTest -->
      <class name="org.fourthline.cling.test.model.profile.DeviceDetailsProviderTest">
        <test-method status="PASS" signature="headerRegexMatch()[pri:0, instance:org.fourthline.cling.test.model.profile.DeviceDetailsProviderTest@12cbfa]" name="headerRegexMatch" duration-ms="2" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- headerRegexMatch -->
      </class> <!-- org.fourthline.cling.test.model.profile.DeviceDetailsProviderTest -->
      <class name="org.fourthline.cling.test.model.DeviceGraphTest">
        <test-method status="PASS" signature="findDevicesWithDeviceType()[pri:0, instance:org.fourthline.cling.test.model.DeviceGraphTest@1adae5d]" name="findDevicesWithDeviceType" duration-ms="10" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findDevicesWithDeviceType -->
        <test-method status="PASS" signature="findDevicesWithUDN()[pri:0, instance:org.fourthline.cling.test.model.DeviceGraphTest@1adae5d]" name="findDevicesWithUDN" duration-ms="3" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findDevicesWithUDN -->
        <test-method status="PASS" signature="findEmbeddedDevices()[pri:0, instance:org.fourthline.cling.test.model.DeviceGraphTest@1adae5d]" name="findEmbeddedDevices" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findEmbeddedDevices -->
        <test-method status="PASS" signature="findRoot()[pri:0, instance:org.fourthline.cling.test.model.DeviceGraphTest@1adae5d]" name="findRoot" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findRoot -->
        <test-method status="PASS" signature="findServiceTypes()[pri:0, instance:org.fourthline.cling.test.model.DeviceGraphTest@1adae5d]" name="findServiceTypes" duration-ms="2" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findServiceTypes -->
        <test-method status="PASS" signature="findServicesAll()[pri:0, instance:org.fourthline.cling.test.model.DeviceGraphTest@1adae5d]" name="findServicesAll" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findServicesAll -->
        <test-method status="PASS" signature="findServicesFirst()[pri:0, instance:org.fourthline.cling.test.model.DeviceGraphTest@1adae5d]" name="findServicesFirst" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findServicesFirst -->
        <test-method status="PASS" signature="findServicesId()[pri:0, instance:org.fourthline.cling.test.model.DeviceGraphTest@1adae5d]" name="findServicesId" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findServicesId -->
        <test-method status="PASS" signature="findServicesType()[pri:0, instance:org.fourthline.cling.test.model.DeviceGraphTest@1adae5d]" name="findServicesType" duration-ms="1" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findServicesType -->
      </class> <!-- org.fourthline.cling.test.model.DeviceGraphTest -->
      <class name="org.fourthline.cling.test.model.DatagramParsingTest">
        <test-method status="PASS" signature="parseRoundtrip()[pri:0, instance:org.fourthline.cling.test.model.DatagramParsingTest@1be98f5]" name="parseRoundtrip" duration-ms="111" started-at="2017-11-30T00:20:18Z" finished-at="2017-11-30T00:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseRoundtrip -->
        <test-method status="PASS" signature="readSource()[pri:0, instance:org.fourthline.cling.test.model.DatagramParsingTest@1be98f5]" name="readSource" duration-ms="2" started-at="2017-11-30T00:20:18Z" finished-at="2017-11-30T00:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readSource -->
      </class> <!-- org.fourthline.cling.test.model.DatagramParsingTest -->
    </test> <!-- Model -->
    <test name="Local" duration-ms="15602" started-at="2017-11-29T17:20:19Z" finished-at="2017-11-29T17:20:35Z">
      <class name="org.fourthline.cling.test.local.LocalActionInvocationNullTest">
        <test-method status="PASS" signature="invokeActions()[pri:0, instance:org.fourthline.cling.test.local.LocalActionInvocationNullTest@7f6473]" name="invokeActions" duration-ms="3" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeActions -->
      </class> <!-- org.fourthline.cling.test.local.LocalActionInvocationNullTest -->
      <class name="org.fourthline.cling.test.local.LocalActionInvocationDatatypesTest">
        <test-method status="PASS" signature="invokeActions()[pri:0, instance:org.fourthline.cling.test.local.LocalActionInvocationDatatypesTest@1143ee9]" name="invokeActions" duration-ms="3" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeActions -->
      </class> <!-- org.fourthline.cling.test.local.LocalActionInvocationDatatypesTest -->
      <class name="org.fourthline.cling.test.local.LocalActionInvocationCSVTest">
        <test-method status="PASS" signature="invokeActions(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:org.fourthline.cling.test.local.LocalActionInvocationCSVTest@136f0f5]" name="invokeActions" duration-ms="5" started-at="2017-11-30T00:20:19Z" data-provider="devices" finished-at="2017-11-30T00:20:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeActions -->
      </class> <!-- org.fourthline.cling.test.local.LocalActionInvocationCSVTest -->
      <class name="org.fourthline.cling.test.local.LocalActionInvocationEnumTest">
        <test-method status="PASS" signature="invokeActions(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:org.fourthline.cling.test.local.LocalActionInvocationEnumTest@15435c]" name="invokeActions" duration-ms="1" started-at="2017-11-30T00:20:19Z" data-provider="devices" finished-at="2017-11-30T00:20:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeActions -->
        <test-method status="PASS" signature="invokeActions(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:org.fourthline.cling.test.local.LocalActionInvocationEnumTest@15435c]" name="invokeActions" duration-ms="1" started-at="2017-11-30T00:20:19Z" data-provider="devices" finished-at="2017-11-30T00:20:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeActions -->
        <test-method status="PASS" signature="invokeActions(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:org.fourthline.cling.test.local.LocalActionInvocationEnumTest@15435c]" name="invokeActions" duration-ms="0" started-at="2017-11-30T00:20:19Z" data-provider="devices" finished-at="2017-11-30T00:20:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeActions -->
      </class> <!-- org.fourthline.cling.test.local.LocalActionInvocationEnumTest -->
      <class name="org.fourthline.cling.test.local.LocalDeviceBindingAdvertisementTest">
        <test-method status="PASS" signature="byeByeBeforeAlive()[pri:0, instance:org.fourthline.cling.test.local.LocalDeviceBindingAdvertisementTest@1975490]" name="byeByeBeforeAlive" duration-ms="2624" started-at="2017-11-30T00:20:19Z" finished-at="2017-11-30T00:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- byeByeBeforeAlive -->
        <test-method status="PASS" signature="registerLocalDevice()[pri:0, instance:org.fourthline.cling.test.local.LocalDeviceBindingAdvertisementTest@1975490]" name="registerLocalDevice" duration-ms="2607" started-at="2017-11-30T00:20:22Z" finished-at="2017-11-30T00:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerLocalDevice -->
        <test-method status="PASS" signature="registerNonAdvertisedLocalDevice()[pri:0, instance:org.fourthline.cling.test.local.LocalDeviceBindingAdvertisementTest@1975490]" name="registerNonAdvertisedLocalDevice" duration-ms="2575" started-at="2017-11-30T00:20:24Z" finished-at="2017-11-30T00:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerNonAdvertisedLocalDevice -->
        <test-method status="PASS" signature="waitForAliveFlood()[pri:0, instance:org.fourthline.cling.test.local.LocalDeviceBindingAdvertisementTest@1975490]" name="waitForAliveFlood" duration-ms="5636" started-at="2017-11-30T00:20:27Z" finished-at="2017-11-30T00:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitForAliveFlood -->
        <test-method status="FAIL" signature="waitForRefresh()[pri:0, instance:org.fourthline.cling.test.local.LocalDeviceBindingAdvertisementTest@1975490]" name="waitForRefresh" duration-ms="2117" started-at="2017-11-30T00:20:32Z" finished-at="2017-11-30T00:20:35Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at org.fourthline.cling.test.local.LocalDeviceBindingAdvertisementTest.waitForRefresh(LocalDeviceBindingAdvertisementTest.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitForRefresh -->
      </class> <!-- org.fourthline.cling.test.local.LocalDeviceBindingAdvertisementTest -->
    </test> <!-- Local -->
    <test name="SSDP" duration-ms="35967" started-at="2017-11-29T17:20:35Z" finished-at="2017-11-29T17:21:11Z">
      <class name="org.fourthline.cling.test.ssdp.RegistryExpirationTest">
        <test-method status="PASS" signature="addAndExpire()[pri:0, instance:org.fourthline.cling.test.ssdp.RegistryExpirationTest@135b478]" name="addAndExpire" duration-ms="3104" started-at="2017-11-30T00:20:40Z" finished-at="2017-11-30T00:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndExpire -->
        <test-method status="PASS" signature="addAndUpdateAndExpire()[pri:0, instance:org.fourthline.cling.test.ssdp.RegistryExpirationTest@135b478]" name="addAndUpdateAndExpire" duration-ms="6152" started-at="2017-11-30T00:20:43Z" finished-at="2017-11-30T00:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndUpdateAndExpire -->
        <test-method status="PASS" signature="addResourceAndExpire()[pri:0, instance:org.fourthline.cling.test.ssdp.RegistryExpirationTest@135b478]" name="addResourceAndExpire" duration-ms="4149" started-at="2017-11-30T00:20:49Z" finished-at="2017-11-30T00:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addResourceAndExpire -->
        <test-method status="PASS" signature="addResourceAndMaintain()[pri:0, instance:org.fourthline.cling.test.ssdp.RegistryExpirationTest@135b478]" name="addResourceAndMaintain" duration-ms="2134" started-at="2017-11-30T00:20:53Z" finished-at="2017-11-30T00:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addResourceAndMaintain -->
        <test-method status="PASS" signature="overrideAgeThenAddAndExpire()[pri:0, instance:org.fourthline.cling.test.ssdp.RegistryExpirationTest@135b478]" name="overrideAgeThenAddAndExpire" duration-ms="6099" started-at="2017-11-30T00:20:55Z" finished-at="2017-11-30T00:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- overrideAgeThenAddAndExpire -->
      </class> <!-- org.fourthline.cling.test.ssdp.RegistryExpirationTest -->
      <class name="org.fourthline.cling.test.ssdp.SearchResponseTest">
        <test-method status="PASS" signature="receiveEmbeddedTriggersUpdate()[pri:0, instance:org.fourthline.cling.test.ssdp.SearchResponseTest@96442d]" name="receiveEmbeddedTriggersUpdate" duration-ms="3140" started-at="2017-11-30T00:21:07Z" finished-at="2017-11-30T00:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receiveEmbeddedTriggersUpdate -->
        <test-method status="PASS" signature="receivedAlreadyKnownLocalUDN()[pri:0, instance:org.fourthline.cling.test.ssdp.SearchResponseTest@96442d]" name="receivedAlreadyKnownLocalUDN" duration-ms="201" started-at="2017-11-30T00:21:10Z" finished-at="2017-11-30T00:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receivedAlreadyKnownLocalUDN -->
        <test-method status="PASS" signature="receivedInvalidSearchResponses()[pri:0, instance:org.fourthline.cling.test.ssdp.SearchResponseTest@96442d]" name="receivedInvalidSearchResponses" duration-ms="444" started-at="2017-11-30T00:21:10Z" finished-at="2017-11-30T00:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receivedInvalidSearchResponses -->
        <test-method status="PASS" signature="receivedValidResponse()[pri:0, instance:org.fourthline.cling.test.ssdp.SearchResponseTest@96442d]" name="receivedValidResponse" duration-ms="204" started-at="2017-11-30T00:21:10Z" finished-at="2017-11-30T00:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receivedValidResponse -->
      </class> <!-- org.fourthline.cling.test.ssdp.SearchResponseTest -->
      <class name="org.fourthline.cling.test.ssdp.SearchReceivedTest">
        <test-method status="PASS" signature="receivedInvalidMX()[pri:0, instance:org.fourthline.cling.test.ssdp.SearchReceivedTest@9f9fb0]" name="receivedInvalidMX" duration-ms="131" started-at="2017-11-30T00:21:01Z" finished-at="2017-11-30T00:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receivedInvalidMX -->
        <test-method status="PASS" signature="receivedInvalidST()[pri:0, instance:org.fourthline.cling.test.ssdp.SearchReceivedTest@9f9fb0]" name="receivedInvalidST" duration-ms="101" started-at="2017-11-30T00:21:02Z" finished-at="2017-11-30T00:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receivedInvalidST -->
        <test-method status="PASS" signature="receivedNonAdvertised()[pri:0, instance:org.fourthline.cling.test.ssdp.SearchReceivedTest@9f9fb0]" name="receivedNonAdvertised" duration-ms="714" started-at="2017-11-30T00:21:02Z" finished-at="2017-11-30T00:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receivedNonAdvertised -->
        <test-method status="PASS" signature="receivedSearchAll()[pri:0, instance:org.fourthline.cling.test.ssdp.SearchReceivedTest@9f9fb0]" name="receivedSearchAll" duration-ms="1092" started-at="2017-11-30T00:21:02Z" finished-at="2017-11-30T00:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receivedSearchAll -->
        <test-method status="PASS" signature="receivedSearchDeviceType()[pri:0, instance:org.fourthline.cling.test.ssdp.SearchReceivedTest@9f9fb0]" name="receivedSearchDeviceType" duration-ms="657" started-at="2017-11-30T00:21:03Z" finished-at="2017-11-30T00:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receivedSearchDeviceType -->
        <test-method status="PASS" signature="receivedSearchRoot()[pri:0, instance:org.fourthline.cling.test.ssdp.SearchReceivedTest@9f9fb0]" name="receivedSearchRoot" duration-ms="709" started-at="2017-11-30T00:21:04Z" finished-at="2017-11-30T00:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receivedSearchRoot -->
        <test-method status="PASS" signature="receivedSearchServiceType()[pri:0, instance:org.fourthline.cling.test.ssdp.SearchReceivedTest@9f9fb0]" name="receivedSearchServiceType" duration-ms="739" started-at="2017-11-30T00:21:05Z" finished-at="2017-11-30T00:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receivedSearchServiceType -->
        <test-method status="PASS" signature="receivedSearchUDN()[pri:0, instance:org.fourthline.cling.test.ssdp.SearchReceivedTest@9f9fb0]" name="receivedSearchUDN" duration-ms="1001" started-at="2017-11-30T00:21:06Z" finished-at="2017-11-30T00:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receivedSearchUDN -->
      </class> <!-- org.fourthline.cling.test.ssdp.SearchReceivedTest -->
      <class name="org.fourthline.cling.test.ssdp.NotifyTest">
        <test-method status="PASS" signature="receiveEmbeddedTriggersUpdate()[pri:0, instance:org.fourthline.cling.test.ssdp.NotifyTest@11be3c5]" name="receiveEmbeddedTriggersUpdate" duration-ms="3133" started-at="2017-11-30T00:20:36Z" finished-at="2017-11-30T00:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receiveEmbeddedTriggersUpdate -->
        <test-method status="PASS" signature="receivedAlreadyKnownLocalUDN()[pri:0, instance:org.fourthline.cling.test.ssdp.NotifyTest@11be3c5]" name="receivedAlreadyKnownLocalUDN" duration-ms="237" started-at="2017-11-30T00:20:39Z" finished-at="2017-11-30T00:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receivedAlreadyKnownLocalUDN -->
        <test-method status="PASS" signature="receivedByeBye()[pri:0, instance:org.fourthline.cling.test.ssdp.NotifyTest@11be3c5]" name="receivedByeBye" duration-ms="100" started-at="2017-11-30T00:20:39Z" finished-at="2017-11-30T00:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receivedByeBye -->
        <test-method status="PASS" signature="receivedNoLocation()[pri:0, instance:org.fourthline.cling.test.ssdp.NotifyTest@11be3c5]" name="receivedNoLocation" duration-ms="202" started-at="2017-11-30T00:20:39Z" finished-at="2017-11-30T00:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receivedNoLocation -->
        <test-method status="PASS" signature="receivedNoMaxAge()[pri:0, instance:org.fourthline.cling.test.ssdp.NotifyTest@11be3c5]" name="receivedNoMaxAge" duration-ms="237" started-at="2017-11-30T00:20:39Z" finished-at="2017-11-30T00:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receivedNoMaxAge -->
        <test-method status="PASS" signature="receivedNoUDN()[pri:0, instance:org.fourthline.cling.test.ssdp.NotifyTest@11be3c5]" name="receivedNoUDN" duration-ms="132" started-at="2017-11-30T00:20:40Z" finished-at="2017-11-30T00:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receivedNoUDN -->
      </class> <!-- org.fourthline.cling.test.ssdp.NotifyTest -->
      <class name="org.fourthline.cling.test.ssdp.AdvertisementTest">
        <test-method status="PASS" signature="sendAliveMessages()[pri:0, instance:org.fourthline.cling.test.ssdp.AdvertisementTest@af6cff]" name="sendAliveMessages" duration-ms="574" started-at="2017-11-30T00:20:35Z" finished-at="2017-11-30T00:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendAliveMessages -->
        <test-method status="PASS" signature="sendByebyeMessages()[pri:0, instance:org.fourthline.cling.test.ssdp.AdvertisementTest@af6cff]" name="sendByebyeMessages" duration-ms="568" started-at="2017-11-30T00:20:35Z" finished-at="2017-11-30T00:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendByebyeMessages -->
      </class> <!-- org.fourthline.cling.test.ssdp.AdvertisementTest -->
    </test> <!-- SSDP -->
    <test name="Description" duration-ms="6710" started-at="2017-11-29T17:21:11Z" finished-at="2017-11-29T17:21:17Z">
      <class name="org.fourthline.cling.test.resources.UDA10DeviceDescriptorParsingTest">
        <test-method status="PASS" signature="readUDA10DescriptorDOM()[pri:0, instance:org.fourthline.cling.test.resources.UDA10DeviceDescriptorParsingTest@1e84876]" name="readUDA10DescriptorDOM" duration-ms="101" started-at="2017-11-30T00:21:17Z" finished-at="2017-11-30T00:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readUDA10DescriptorDOM -->
        <test-method status="PASS" signature="readUDA10DescriptorSAX()[pri:0, instance:org.fourthline.cling.test.resources.UDA10DeviceDescriptorParsingTest@1e84876]" name="readUDA10DescriptorSAX" duration-ms="102" started-at="2017-11-30T00:21:17Z" finished-at="2017-11-30T00:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readUDA10DescriptorSAX -->
        <test-method status="PASS" signature="readUDA10DescriptorWithEmptyURLBase()[pri:0, instance:org.fourthline.cling.test.resources.UDA10DeviceDescriptorParsingTest@1e84876]" name="readUDA10DescriptorWithEmptyURLBase" duration-ms="99" started-at="2017-11-30T00:21:17Z" finished-at="2017-11-30T00:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readUDA10DescriptorWithEmptyURLBase -->
        <test-method status="PASS" signature="readUDA10DescriptorWithURLBase()[pri:0, instance:org.fourthline.cling.test.resources.UDA10DeviceDescriptorParsingTest@1e84876]" name="readUDA10DescriptorWithURLBase" duration-ms="83" started-at="2017-11-30T00:21:17Z" finished-at="2017-11-30T00:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readUDA10DescriptorWithURLBase -->
        <test-method status="PASS" signature="readUDA10DescriptorWithURLBase2()[pri:0, instance:org.fourthline.cling.test.resources.UDA10DeviceDescriptorParsingTest@1e84876]" name="readUDA10DescriptorWithURLBase2" duration-ms="99" started-at="2017-11-30T00:21:17Z" finished-at="2017-11-30T00:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readUDA10DescriptorWithURLBase2 -->
        <test-method status="PASS" signature="writeUDA10Descriptor()[pri:0, instance:org.fourthline.cling.test.resources.UDA10DeviceDescriptorParsingTest@1e84876]" name="writeUDA10Descriptor" duration-ms="122" started-at="2017-11-30T00:21:17Z" finished-at="2017-11-30T00:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeUDA10Descriptor -->
        <test-method status="PASS" signature="writeUDA10DescriptorWithProvider()[pri:0, instance:org.fourthline.cling.test.resources.UDA10DeviceDescriptorParsingTest@1e84876]" name="writeUDA10DescriptorWithProvider" duration-ms="109" started-at="2017-11-30T00:21:17Z" finished-at="2017-11-30T00:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeUDA10DescriptorWithProvider -->
      </class> <!-- org.fourthline.cling.test.resources.UDA10DeviceDescriptorParsingTest -->
      <class name="org.fourthline.cling.test.resources.DeviceDescriptorRetrievalTest">
        <test-method status="PASS" signature="registerAndRetrieveDescriptor()[pri:0, instance:org.fourthline.cling.test.resources.DeviceDescriptorRetrievalTest@76ae34]" name="registerAndRetrieveDescriptor" duration-ms="101" started-at="2017-11-30T00:21:11Z" finished-at="2017-11-30T00:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerAndRetrieveDescriptor -->
        <test-method status="PASS" signature="retrieveNonExistentDescriptor()[pri:0, instance:org.fourthline.cling.test.resources.DeviceDescriptorRetrievalTest@76ae34]" name="retrieveNonExistentDescriptor" duration-ms="99" started-at="2017-11-30T00:21:11Z" finished-at="2017-11-30T00:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- retrieveNonExistentDescriptor -->
      </class> <!-- org.fourthline.cling.test.resources.DeviceDescriptorRetrievalTest -->
      <class name="org.fourthline.cling.test.resources.ServiceDescriptorRetrievalTest">
        <test-method status="PASS" signature="registerAndRetrieveDescriptor()[pri:0, instance:org.fourthline.cling.test.resources.ServiceDescriptorRetrievalTest@1a485d2]" name="registerAndRetrieveDescriptor" duration-ms="110" started-at="2017-11-30T00:21:16Z" finished-at="2017-11-30T00:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerAndRetrieveDescriptor -->
        <test-method status="PASS" signature="retrieveNonExistentDescriptor()[pri:0, instance:org.fourthline.cling.test.resources.ServiceDescriptorRetrievalTest@1a485d2]" name="retrieveNonExistentDescriptor" duration-ms="97" started-at="2017-11-30T00:21:16Z" finished-at="2017-11-30T00:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- retrieveNonExistentDescriptor -->
      </class> <!-- org.fourthline.cling.test.resources.ServiceDescriptorRetrievalTest -->
      <class name="org.fourthline.cling.test.resources.UDA10ServiceDescriptorParsingTest">
        <test-method status="PASS" signature="readUDA10DescriptorDOM()[pri:0, instance:org.fourthline.cling.test.resources.UDA10ServiceDescriptorParsingTest@1fb3ab6]" name="readUDA10DescriptorDOM" duration-ms="3" started-at="2017-11-30T00:21:17Z" finished-at="2017-11-30T00:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readUDA10DescriptorDOM -->
        <test-method status="PASS" signature="readUDA10DescriptorSAX()[pri:0, instance:org.fourthline.cling.test.resources.UDA10ServiceDescriptorParsingTest@1fb3ab6]" name="readUDA10DescriptorSAX" duration-ms="12" started-at="2017-11-30T00:21:17Z" finished-at="2017-11-30T00:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readUDA10DescriptorSAX -->
        <test-method status="PASS" signature="writeUDA10Descriptor()[pri:0, instance:org.fourthline.cling.test.resources.UDA10ServiceDescriptorParsingTest@1fb3ab6]" name="writeUDA10Descriptor" duration-ms="7" started-at="2017-11-30T00:21:17Z" finished-at="2017-11-30T00:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeUDA10Descriptor -->
      </class> <!-- org.fourthline.cling.test.resources.UDA10ServiceDescriptorParsingTest -->
      <class name="org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest">
        <test-method status="PASS" signature="readDefault(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readDefault" duration-ms="105" started-at="2017-11-30T00:21:11Z" data-provider="strict" finished-at="2017-11-30T00:21:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/atb_miviewtv.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readDefault -->
        <test-method status="PASS" signature="readDefault(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readDefault" duration-ms="86" started-at="2017-11-30T00:21:11Z" data-provider="strict" finished-at="2017-11-30T00:21:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/doubletwist.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readDefault -->
        <test-method status="PASS" signature="readDefault(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readDefault" duration-ms="110" started-at="2017-11-30T00:21:11Z" data-provider="strict" finished-at="2017-11-30T00:21:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/eyetv_netstream_sat.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readDefault -->
        <test-method status="PASS" signature="readDefault(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readDefault" duration-ms="105" started-at="2017-11-30T00:21:11Z" data-provider="strict" finished-at="2017-11-30T00:21:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/makemkv.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readDefault -->
        <test-method status="PASS" signature="readDefault(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readDefault" duration-ms="104" started-at="2017-11-30T00:21:11Z" data-provider="strict" finished-at="2017-11-30T00:21:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/tpg.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readDefault -->
        <test-method status="PASS" signature="readDefault(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readDefault" duration-ms="115" started-at="2017-11-30T00:21:11Z" data-provider="strict" finished-at="2017-11-30T00:21:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/ceton_infinitv.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readDefault -->
        <test-method status="PASS" signature="readDefault(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readDefault" duration-ms="101" started-at="2017-11-30T00:21:11Z" data-provider="strict" finished-at="2017-11-30T00:21:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/zyxel_miviewtv.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readDefault -->
        <test-method status="PASS" signature="readDefault(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readDefault" duration-ms="85" started-at="2017-11-30T00:21:11Z" data-provider="strict" finished-at="2017-11-30T00:21:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/perfectwave.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readDefault -->
        <test-method status="PASS" signature="readDefault(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readDefault" duration-ms="104" started-at="2017-11-30T00:21:12Z" data-provider="strict" finished-at="2017-11-30T00:21:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/escient.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readDefault -->
        <test-method status="PASS" signature="readDefault(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readDefault" duration-ms="127" started-at="2017-11-30T00:21:12Z" data-provider="strict" finished-at="2017-11-30T00:21:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/eyecon.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readDefault -->
        <test-method status="PASS" signature="readDefault(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readDefault" duration-ms="109" started-at="2017-11-30T00:21:12Z" data-provider="strict" finished-at="2017-11-30T00:21:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/kodak.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readDefault -->
        <test-method status="PASS" signature="readDefault(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readDefault" duration-ms="103" started-at="2017-11-30T00:21:12Z" data-provider="strict" finished-at="2017-11-30T00:21:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/plutinosoft.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readDefault -->
        <test-method status="PASS" signature="readDefault(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readDefault" duration-ms="92" started-at="2017-11-30T00:21:12Z" data-provider="strict" finished-at="2017-11-30T00:21:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/samsung.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readDefault -->
        <test-method status="PASS" signature="readDefault(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readDefault" duration-ms="99" started-at="2017-11-30T00:21:12Z" data-provider="strict" finished-at="2017-11-30T00:21:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/philips_hue.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readDefault -->
        <test-method status="PASS" signature="readFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readFailure" duration-ms="120" started-at="2017-11-30T00:21:12Z" data-provider="recoverable" finished-at="2017-11-30T00:21:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/missing_namespaces.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.fourthline.cling.binding.xml.DescriptorBindingException">
            <message>
              <![CDATA[Could not parse device descriptor: org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 21; The prefix "dlna" for element "dlna:X_DLNADOC" is not bound.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.binding.xml.DescriptorBindingException: Could not parse device descriptor: org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 21; The prefix "dlna" for element "dlna:X_DLNADOC" is not bound.
	at org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl.describe(UDA10DeviceDescriptorBinderImpl.java:104)
	at org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest.readDevice(InvalidUDA10DeviceDescriptorParsingTest.java:148)
	at org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest.readFailure(InvalidUDA10DeviceDescriptorParsingTest.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 21; The prefix "dlna" for element "dlna:X_DLNADOC" is not bound.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:284)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:284)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2784)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:602)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:112)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:505)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:841)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:770)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:339)
	at org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl.describe(UDA10DeviceDescriptorBinderImpl.java:92)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.binding.xml.DescriptorBindingException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readFailure -->
        <test-method status="PASS" signature="readFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readFailure" duration-ms="102" started-at="2017-11-30T00:21:12Z" data-provider="recoverable" finished-at="2017-11-30T00:21:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/ushare.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.fourthline.cling.binding.xml.DescriptorBindingException">
            <message>
              <![CDATA[Could not parse device descriptor: org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 21; The prefix "dlna" for element "dlna:X_DLNADOC" is not bound.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.binding.xml.DescriptorBindingException: Could not parse device descriptor: org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 21; The prefix "dlna" for element "dlna:X_DLNADOC" is not bound.
	at org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl.describe(UDA10DeviceDescriptorBinderImpl.java:104)
	at org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest.readDevice(InvalidUDA10DeviceDescriptorParsingTest.java:148)
	at org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest.readFailure(InvalidUDA10DeviceDescriptorParsingTest.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 21; The prefix "dlna" for element "dlna:X_DLNADOC" is not bound.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:284)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:284)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2784)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:602)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:112)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:505)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:841)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:770)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:339)
	at org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl.describe(UDA10DeviceDescriptorBinderImpl.java:92)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.binding.xml.DescriptorBindingException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readFailure -->
        <test-method status="PASS" signature="readFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readFailure" duration-ms="98" started-at="2017-11-30T00:21:12Z" data-provider="recoverable" finished-at="2017-11-30T00:21:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/lg.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.fourthline.cling.binding.xml.DescriptorBindingException">
            <message>
              <![CDATA[Could not parse device descriptor: org.xml.sax.SAXParseException; lineNumber: 50; columnNumber: 1; Content is not allowed in trailing section.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.binding.xml.DescriptorBindingException: Could not parse device descriptor: org.xml.sax.SAXParseException; lineNumber: 50; columnNumber: 1; Content is not allowed in trailing section.
	at org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl.describe(UDA10DeviceDescriptorBinderImpl.java:104)
	at org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest.readDevice(InvalidUDA10DeviceDescriptorParsingTest.java:148)
	at org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest.readFailure(InvalidUDA10DeviceDescriptorParsingTest.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.xml.sax.SAXParseException; lineNumber: 50; columnNumber: 1; Content is not allowed in trailing section.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1472)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$TrailingMiscDriver.next(XMLDocumentScannerImpl.java:1431)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:602)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:112)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:505)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:841)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:770)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:339)
	at org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl.describe(UDA10DeviceDescriptorBinderImpl.java:92)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.binding.xml.DescriptorBindingException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readFailure -->
        <test-method status="PASS" signature="readFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readFailure" duration-ms="80" started-at="2017-11-30T00:21:13Z" data-provider="recoverable" finished-at="2017-11-30T00:21:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/readydlna.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.fourthline.cling.binding.xml.DescriptorBindingException">
            <message>
              <![CDATA[Could not parse device descriptor: org.xml.sax.SAXParseException; lineNumber: 9; columnNumber: 31; The reference to entity "N:DGND3700" must end with the ';' delimiter.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.binding.xml.DescriptorBindingException: Could not parse device descriptor: org.xml.sax.SAXParseException; lineNumber: 9; columnNumber: 31; The reference to entity "N:DGND3700" must end with the ';' delimiter.
	at org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl.describe(UDA10DeviceDescriptorBinderImpl.java:104)
	at org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest.readDevice(InvalidUDA10DeviceDescriptorParsingTest.java:148)
	at org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest.readFailure(InvalidUDA10DeviceDescriptorParsingTest.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.xml.sax.SAXParseException; lineNumber: 9; columnNumber: 31; The reference to entity "N:DGND3700" must end with the ';' delimiter.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1472)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanEntityReference(XMLDocumentFragmentScannerImpl.java:1850)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3061)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:602)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:112)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:505)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:841)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:770)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:339)
	at org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl.describe(UDA10DeviceDescriptorBinderImpl.java:92)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.binding.xml.DescriptorBindingException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readFailure -->
        <test-method status="PASS" signature="readRecovering(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecovering" duration-ms="100" started-at="2017-11-30T00:21:13Z" data-provider="recoverable" finished-at="2017-11-30T00:21:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/missing_namespaces.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecovering -->
        <test-method status="PASS" signature="readRecovering(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecovering" duration-ms="80" started-at="2017-11-30T00:21:13Z" data-provider="recoverable" finished-at="2017-11-30T00:21:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/ushare.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecovering -->
        <test-method status="PASS" signature="readRecovering(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecovering" duration-ms="111" started-at="2017-11-30T00:21:13Z" data-provider="recoverable" finished-at="2017-11-30T00:21:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/lg.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecovering -->
        <test-method status="PASS" signature="readRecovering(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecovering" duration-ms="116" started-at="2017-11-30T00:21:13Z" data-provider="recoverable" finished-at="2017-11-30T00:21:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/readydlna.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecovering -->
        <test-method status="PASS" signature="readRecoveringFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecoveringFailure" duration-ms="106" started-at="2017-11-30T00:21:13Z" data-provider="unrecoverable" finished-at="2017-11-30T00:21:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/unrecoverable/pms.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.fourthline.cling.model.ValidationException">
            <message>
              <![CDATA[Validation of device graph failed, call getErrors() on exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.ValidationException: Validation of device graph failed, call getErrors() on exception
	at org.fourthline.cling.model.meta.RemoteService.<init>(RemoteService.java:58)
	at org.fourthline.cling.model.meta.RemoteDevice.newInstance(RemoteDevice.java:154)
	at org.fourthline.cling.model.meta.RemoteDevice.newInstance(RemoteDevice.java:41)
	at org.fourthline.cling.binding.staging.MutableService.build(MutableService.java:45)
	at org.fourthline.cling.binding.staging.MutableDevice.createServices(MutableDevice.java:115)
	at org.fourthline.cling.binding.staging.MutableDevice.build(MutableDevice.java:79)
	at org.fourthline.cling.binding.staging.MutableDevice.build(MutableDevice.java:64)
	at org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl.buildInstance(UDA10DeviceDescriptorBinderImpl.java:128)
	at org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl.describe(UDA10DeviceDescriptorBinderImpl.java:118)
	at org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl.describe(UDA10DeviceDescriptorBinderImpl.java:99)
	at org.fourthline.cling.binding.xml.RecoveringUDA10DeviceDescriptorBinderImpl.describe(RecoveringUDA10DeviceDescriptorBinderImpl.java:47)
	at org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest.readDevice(InvalidUDA10DeviceDescriptorParsingTest.java:148)
	at org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest.readRecoveringFailure(InvalidUDA10DeviceDescriptorParsingTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.ValidationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringFailure -->
        <test-method status="PASS" signature="readRecoveringFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecoveringFailure" duration-ms="105" started-at="2017-11-30T00:21:13Z" data-provider="unrecoverable" finished-at="2017-11-30T00:21:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/unrecoverable/awox.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.fourthline.cling.binding.xml.DescriptorBindingException">
            <message>
              <![CDATA[Could not parse device descriptor: org.fourthline.cling.binding.xml.DescriptorBindingException: Could not parse device DOM: org.fourthline.cling.model.types.InvalidValueException: Can't parse device type string (namespace/type/version): ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.binding.xml.DescriptorBindingException: Could not parse device descriptor: org.fourthline.cling.binding.xml.DescriptorBindingException: Could not parse device DOM: org.fourthline.cling.model.types.InvalidValueException: Can't parse device type string (namespace/type/version): 
	at org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl.describe(UDA10DeviceDescriptorBinderImpl.java:104)
	at org.fourthline.cling.binding.xml.RecoveringUDA10DeviceDescriptorBinderImpl.describe(RecoveringUDA10DeviceDescriptorBinderImpl.java:47)
	at org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest.readDevice(InvalidUDA10DeviceDescriptorParsingTest.java:148)
	at org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest.readRecoveringFailure(InvalidUDA10DeviceDescriptorParsingTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.fourthline.cling.binding.xml.DescriptorBindingException: Could not parse device DOM: org.fourthline.cling.model.types.InvalidValueException: Can't parse device type string (namespace/type/version): 
	at org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl.describe(UDA10DeviceDescriptorBinderImpl.java:123)
	at org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl.describe(UDA10DeviceDescriptorBinderImpl.java:99)
	... 30 more
Caused by: org.fourthline.cling.model.types.InvalidValueException: Can't parse device type string (namespace/type/version): 
	at org.fourthline.cling.model.types.DeviceType.valueOf(DeviceType.java:130)
	at org.fourthline.cling.binding.staging.MutableDevice.createDeviceType(MutableDevice.java:89)
	at org.fourthline.cling.binding.staging.MutableDevice.build(MutableDevice.java:76)
	at org.fourthline.cling.binding.staging.MutableDevice.build(MutableDevice.java:64)
	at org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl.buildInstance(UDA10DeviceDescriptorBinderImpl.java:128)
	at org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl.describe(UDA10DeviceDescriptorBinderImpl.java:118)
	... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.binding.xml.DescriptorBindingException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringFailure -->
        <test-method status="PASS" signature="readRecoveringFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecoveringFailure" duration-ms="84" started-at="2017-11-30T00:21:13Z" data-provider="unrecoverable" finished-at="2017-11-30T00:21:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/philips.xml]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Inputstream was null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Inputstream was null
	at org.seamless.util.io.IO.readLines(IO.java:177)
	at org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest.readDevice(InvalidUDA10DeviceDescriptorParsingTest.java:148)
	at org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest.readRecoveringFailure(InvalidUDA10DeviceDescriptorParsingTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringFailure -->
        <test-method status="PASS" signature="readRecoveringFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecoveringFailure" duration-ms="104" started-at="2017-11-30T00:21:13Z" data-provider="unrecoverable" finished-at="2017-11-30T00:21:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/simplecenter.xml]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Inputstream was null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Inputstream was null
	at org.seamless.util.io.IO.readLines(IO.java:177)
	at org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest.readDevice(InvalidUDA10DeviceDescriptorParsingTest.java:148)
	at org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest.readRecoveringFailure(InvalidUDA10DeviceDescriptorParsingTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringFailure -->
        <test-method status="PASS" signature="readRecoveringFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecoveringFailure" duration-ms="103" started-at="2017-11-30T00:21:13Z" data-provider="unrecoverable" finished-at="2017-11-30T00:21:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/ums.xml]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Inputstream was null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Inputstream was null
	at org.seamless.util.io.IO.readLines(IO.java:177)
	at org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest.readDevice(InvalidUDA10DeviceDescriptorParsingTest.java:148)
	at org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest.readRecoveringFailure(InvalidUDA10DeviceDescriptorParsingTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringFailure -->
        <test-method status="PASS" signature="readRecoveringStrict(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecoveringStrict" duration-ms="103" started-at="2017-11-30T00:21:14Z" data-provider="strict" finished-at="2017-11-30T00:21:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/atb_miviewtv.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringStrict -->
        <test-method status="PASS" signature="readRecoveringStrict(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecoveringStrict" duration-ms="104" started-at="2017-11-30T00:21:14Z" data-provider="strict" finished-at="2017-11-30T00:21:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/doubletwist.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringStrict -->
        <test-method status="PASS" signature="readRecoveringStrict(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecoveringStrict" duration-ms="105" started-at="2017-11-30T00:21:14Z" data-provider="strict" finished-at="2017-11-30T00:21:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/eyetv_netstream_sat.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringStrict -->
        <test-method status="PASS" signature="readRecoveringStrict(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecoveringStrict" duration-ms="84" started-at="2017-11-30T00:21:14Z" data-provider="strict" finished-at="2017-11-30T00:21:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/makemkv.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringStrict -->
        <test-method status="PASS" signature="readRecoveringStrict(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecoveringStrict" duration-ms="111" started-at="2017-11-30T00:21:14Z" data-provider="strict" finished-at="2017-11-30T00:21:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/tpg.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringStrict -->
        <test-method status="PASS" signature="readRecoveringStrict(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecoveringStrict" duration-ms="128" started-at="2017-11-30T00:21:14Z" data-provider="strict" finished-at="2017-11-30T00:21:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/ceton_infinitv.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringStrict -->
        <test-method status="PASS" signature="readRecoveringStrict(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecoveringStrict" duration-ms="104" started-at="2017-11-30T00:21:14Z" data-provider="strict" finished-at="2017-11-30T00:21:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/zyxel_miviewtv.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringStrict -->
        <test-method status="PASS" signature="readRecoveringStrict(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecoveringStrict" duration-ms="97" started-at="2017-11-30T00:21:14Z" data-provider="strict" finished-at="2017-11-30T00:21:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/perfectwave.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringStrict -->
        <test-method status="PASS" signature="readRecoveringStrict(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecoveringStrict" duration-ms="90" started-at="2017-11-30T00:21:14Z" data-provider="strict" finished-at="2017-11-30T00:21:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/escient.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringStrict -->
        <test-method status="PASS" signature="readRecoveringStrict(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecoveringStrict" duration-ms="91" started-at="2017-11-30T00:21:14Z" data-provider="strict" finished-at="2017-11-30T00:21:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/eyecon.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringStrict -->
        <test-method status="PASS" signature="readRecoveringStrict(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecoveringStrict" duration-ms="100" started-at="2017-11-30T00:21:15Z" data-provider="strict" finished-at="2017-11-30T00:21:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/kodak.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringStrict -->
        <test-method status="PASS" signature="readRecoveringStrict(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecoveringStrict" duration-ms="102" started-at="2017-11-30T00:21:15Z" data-provider="strict" finished-at="2017-11-30T00:21:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/plutinosoft.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringStrict -->
        <test-method status="PASS" signature="readRecoveringStrict(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecoveringStrict" duration-ms="85" started-at="2017-11-30T00:21:15Z" data-provider="strict" finished-at="2017-11-30T00:21:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/samsung.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringStrict -->
        <test-method status="PASS" signature="readRecoveringStrict(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readRecoveringStrict" duration-ms="80" started-at="2017-11-30T00:21:15Z" data-provider="strict" finished-at="2017-11-30T00:21:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/philips_hue.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringStrict -->
        <test-method status="PASS" signature="readSAX(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readSAX" duration-ms="132" started-at="2017-11-30T00:21:15Z" data-provider="strict" finished-at="2017-11-30T00:21:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/atb_miviewtv.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readSAX -->
        <test-method status="PASS" signature="readSAX(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readSAX" duration-ms="84" started-at="2017-11-30T00:21:15Z" data-provider="strict" finished-at="2017-11-30T00:21:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/doubletwist.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readSAX -->
        <test-method status="PASS" signature="readSAX(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readSAX" duration-ms="113" started-at="2017-11-30T00:21:15Z" data-provider="strict" finished-at="2017-11-30T00:21:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/eyetv_netstream_sat.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readSAX -->
        <test-method status="PASS" signature="readSAX(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readSAX" duration-ms="100" started-at="2017-11-30T00:21:15Z" data-provider="strict" finished-at="2017-11-30T00:21:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/makemkv.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readSAX -->
        <test-method status="PASS" signature="readSAX(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readSAX" duration-ms="100" started-at="2017-11-30T00:21:15Z" data-provider="strict" finished-at="2017-11-30T00:21:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/tpg.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readSAX -->
        <test-method status="PASS" signature="readSAX(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readSAX" duration-ms="113" started-at="2017-11-30T00:21:15Z" data-provider="strict" finished-at="2017-11-30T00:21:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/ceton_infinitv.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readSAX -->
        <test-method status="PASS" signature="readSAX(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readSAX" duration-ms="103" started-at="2017-11-30T00:21:16Z" data-provider="strict" finished-at="2017-11-30T00:21:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/zyxel_miviewtv.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readSAX -->
        <test-method status="PASS" signature="readSAX(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readSAX" duration-ms="84" started-at="2017-11-30T00:21:16Z" data-provider="strict" finished-at="2017-11-30T00:21:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/perfectwave.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readSAX -->
        <test-method status="PASS" signature="readSAX(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readSAX" duration-ms="100" started-at="2017-11-30T00:21:16Z" data-provider="strict" finished-at="2017-11-30T00:21:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/escient.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readSAX -->
        <test-method status="PASS" signature="readSAX(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readSAX" duration-ms="95" started-at="2017-11-30T00:21:16Z" data-provider="strict" finished-at="2017-11-30T00:21:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/eyecon.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readSAX -->
        <test-method status="PASS" signature="readSAX(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readSAX" duration-ms="99" started-at="2017-11-30T00:21:16Z" data-provider="strict" finished-at="2017-11-30T00:21:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/kodak.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readSAX -->
        <test-method status="PASS" signature="readSAX(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readSAX" duration-ms="99" started-at="2017-11-30T00:21:16Z" data-provider="strict" finished-at="2017-11-30T00:21:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/plutinosoft.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readSAX -->
        <test-method status="PASS" signature="readSAX(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readSAX" duration-ms="101" started-at="2017-11-30T00:21:16Z" data-provider="strict" finished-at="2017-11-30T00:21:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/samsung.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readSAX -->
        <test-method status="PASS" signature="readSAX(java.lang.String)[pri:0, instance:org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest@17d0578]" name="readSAX" duration-ms="86" started-at="2017-11-30T00:21:16Z" data-provider="strict" finished-at="2017-11-30T00:21:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/device/philips_hue.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readSAX -->
      </class> <!-- org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest -->
    </test> <!-- Description -->
    <test name="Control" duration-ms="6539" started-at="2017-11-29T17:21:17Z" finished-at="2017-11-29T17:21:24Z">
      <class name="org.fourthline.cling.test.control.ActionXMLProcessingTest">
        <test-method status="PASS" signature="readEncodedRequest(org.fourthline.cling.transport.spi.SOAPActionProcessor)[pri:0, instance:org.fourthline.cling.test.control.ActionXMLProcessingTest@1565ec2]" name="readEncodedRequest" duration-ms="93" started-at="2017-11-30T00:21:21Z" data-provider="processors" finished-at="2017-11-30T00:21:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.fourthline.cling.transport.impl.SOAPActionProcessorImpl@730b35]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readEncodedRequest -->
        <test-method status="PASS" signature="readEncodedRequest(org.fourthline.cling.transport.spi.SOAPActionProcessor)[pri:0, instance:org.fourthline.cling.test.control.ActionXMLProcessingTest@1565ec2]" name="readEncodedRequest" duration-ms="120" started-at="2017-11-30T00:21:21Z" data-provider="processors" finished-at="2017-11-30T00:21:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.fourthline.cling.transport.impl.PullSOAPActionProcessorImpl@6a70ef]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readEncodedRequest -->
        <test-method status="PASS" signature="readEncodedRequest(org.fourthline.cling.transport.spi.SOAPActionProcessor)[pri:0, instance:org.fourthline.cling.test.control.ActionXMLProcessingTest@1565ec2]" name="readEncodedRequest" duration-ms="99" started-at="2017-11-30T00:21:21Z" data-provider="processors" finished-at="2017-11-30T00:21:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.fourthline.cling.transport.impl.RecoveringSOAPActionProcessorImpl@12b08d6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readEncodedRequest -->
        <test-method status="PASS" signature="readEncodedRequestWithAlias(org.fourthline.cling.transport.spi.SOAPActionProcessor)[pri:0, instance:org.fourthline.cling.test.control.ActionXMLProcessingTest@1565ec2]" name="readEncodedRequestWithAlias" duration-ms="98" started-at="2017-11-30T00:21:21Z" data-provider="processors" finished-at="2017-11-30T00:21:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.fourthline.cling.transport.impl.SOAPActionProcessorImpl@555ebf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readEncodedRequestWithAlias -->
        <test-method status="PASS" signature="readEncodedRequestWithAlias(org.fourthline.cling.transport.spi.SOAPActionProcessor)[pri:0, instance:org.fourthline.cling.test.control.ActionXMLProcessingTest@1565ec2]" name="readEncodedRequestWithAlias" duration-ms="81" started-at="2017-11-30T00:21:21Z" data-provider="processors" finished-at="2017-11-30T00:21:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.fourthline.cling.transport.impl.PullSOAPActionProcessorImpl@ebc363]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readEncodedRequestWithAlias -->
        <test-method status="PASS" signature="readEncodedRequestWithAlias(org.fourthline.cling.transport.spi.SOAPActionProcessor)[pri:0, instance:org.fourthline.cling.test.control.ActionXMLProcessingTest@1565ec2]" name="readEncodedRequestWithAlias" duration-ms="61" started-at="2017-11-30T00:21:22Z" data-provider="processors" finished-at="2017-11-30T00:21:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.fourthline.cling.transport.impl.RecoveringSOAPActionProcessorImpl@1752059]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readEncodedRequestWithAlias -->
        <test-method status="PASS" signature="writeDecodedResponse(org.fourthline.cling.transport.spi.SOAPActionProcessor)[pri:0, instance:org.fourthline.cling.test.control.ActionXMLProcessingTest@1565ec2]" name="writeDecodedResponse" duration-ms="80" started-at="2017-11-30T00:21:22Z" data-provider="processors" finished-at="2017-11-30T00:21:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.fourthline.cling.transport.impl.SOAPActionProcessorImpl@127514f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeDecodedResponse -->
        <test-method status="PASS" signature="writeDecodedResponse(org.fourthline.cling.transport.spi.SOAPActionProcessor)[pri:0, instance:org.fourthline.cling.test.control.ActionXMLProcessingTest@1565ec2]" name="writeDecodedResponse" duration-ms="69" started-at="2017-11-30T00:21:22Z" data-provider="processors" finished-at="2017-11-30T00:21:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.fourthline.cling.transport.impl.PullSOAPActionProcessorImpl@112b668]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeDecodedResponse -->
        <test-method status="PASS" signature="writeDecodedResponse(org.fourthline.cling.transport.spi.SOAPActionProcessor)[pri:0, instance:org.fourthline.cling.test.control.ActionXMLProcessingTest@1565ec2]" name="writeDecodedResponse" duration-ms="98" started-at="2017-11-30T00:21:22Z" data-provider="processors" finished-at="2017-11-30T00:21:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.fourthline.cling.transport.impl.RecoveringSOAPActionProcessorImpl@1165b38]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeDecodedResponse -->
        <test-method status="PASS" signature="writeFailureReadFailure(org.fourthline.cling.transport.spi.SOAPActionProcessor)[pri:0, instance:org.fourthline.cling.test.control.ActionXMLProcessingTest@1565ec2]" name="writeFailureReadFailure" duration-ms="88" started-at="2017-11-30T00:21:22Z" data-provider="processors" finished-at="2017-11-30T00:21:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.fourthline.cling.transport.impl.SOAPActionProcessorImpl@12331b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeFailureReadFailure -->
        <test-method status="PASS" signature="writeFailureReadFailure(org.fourthline.cling.transport.spi.SOAPActionProcessor)[pri:0, instance:org.fourthline.cling.test.control.ActionXMLProcessingTest@1565ec2]" name="writeFailureReadFailure" duration-ms="94" started-at="2017-11-30T00:21:22Z" data-provider="processors" finished-at="2017-11-30T00:21:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.fourthline.cling.transport.impl.PullSOAPActionProcessorImpl@186beff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeFailureReadFailure -->
        <test-method status="PASS" signature="writeFailureReadFailure(org.fourthline.cling.transport.spi.SOAPActionProcessor)[pri:0, instance:org.fourthline.cling.test.control.ActionXMLProcessingTest@1565ec2]" name="writeFailureReadFailure" duration-ms="75" started-at="2017-11-30T00:21:22Z" data-provider="processors" finished-at="2017-11-30T00:21:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.fourthline.cling.transport.impl.RecoveringSOAPActionProcessorImpl@169e7d1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeFailureReadFailure -->
        <test-method status="PASS" signature="writeReadRequest(org.fourthline.cling.transport.spi.SOAPActionProcessor)[pri:0, instance:org.fourthline.cling.test.control.ActionXMLProcessingTest@1565ec2]" name="writeReadRequest" duration-ms="100" started-at="2017-11-30T00:21:22Z" data-provider="processors" finished-at="2017-11-30T00:21:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.fourthline.cling.transport.impl.SOAPActionProcessorImpl@15b41f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeReadRequest -->
        <test-method status="PASS" signature="writeReadRequest(org.fourthline.cling.transport.spi.SOAPActionProcessor)[pri:0, instance:org.fourthline.cling.test.control.ActionXMLProcessingTest@1565ec2]" name="writeReadRequest" duration-ms="98" started-at="2017-11-30T00:21:22Z" data-provider="processors" finished-at="2017-11-30T00:21:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.fourthline.cling.transport.impl.PullSOAPActionProcessorImpl@142c4ed]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeReadRequest -->
        <test-method status="PASS" signature="writeReadRequest(org.fourthline.cling.transport.spi.SOAPActionProcessor)[pri:0, instance:org.fourthline.cling.test.control.ActionXMLProcessingTest@1565ec2]" name="writeReadRequest" duration-ms="58" started-at="2017-11-30T00:21:22Z" data-provider="processors" finished-at="2017-11-30T00:21:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.fourthline.cling.transport.impl.RecoveringSOAPActionProcessorImpl@173f9fc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeReadRequest -->
        <test-method status="PASS" signature="writeReadResponse(org.fourthline.cling.transport.spi.SOAPActionProcessor)[pri:0, instance:org.fourthline.cling.test.control.ActionXMLProcessingTest@1565ec2]" name="writeReadResponse" duration-ms="94" started-at="2017-11-30T00:21:22Z" data-provider="processors" finished-at="2017-11-30T00:21:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.fourthline.cling.transport.impl.SOAPActionProcessorImpl@150c3ec]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeReadResponse -->
        <test-method status="PASS" signature="writeReadResponse(org.fourthline.cling.transport.spi.SOAPActionProcessor)[pri:0, instance:org.fourthline.cling.test.control.ActionXMLProcessingTest@1565ec2]" name="writeReadResponse" duration-ms="88" started-at="2017-11-30T00:21:22Z" data-provider="processors" finished-at="2017-11-30T00:21:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.fourthline.cling.transport.impl.PullSOAPActionProcessorImpl@c03695]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeReadResponse -->
        <test-method status="PASS" signature="writeReadResponse(org.fourthline.cling.transport.spi.SOAPActionProcessor)[pri:0, instance:org.fourthline.cling.test.control.ActionXMLProcessingTest@1565ec2]" name="writeReadResponse" duration-ms="100" started-at="2017-11-30T00:21:23Z" data-provider="processors" finished-at="2017-11-30T00:21:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.fourthline.cling.transport.impl.RecoveringSOAPActionProcessorImpl@1e6f74c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeReadResponse -->
      </class> <!-- org.fourthline.cling.test.control.ActionXMLProcessingTest -->
      <class name="org.fourthline.cling.test.control.InvalidActionXMLProcessingTest">
        <test-method status="PASS" signature="readRequestDefaultFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.control.InvalidActionXMLProcessingTest@feb3fa]" name="readRequestDefaultFailure" duration-ms="103" started-at="2017-11-30T00:21:23Z" data-provider="invalidXMLFile" finished-at="2017-11-30T00:21:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/control/request_missing_envelope.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.fourthline.cling.model.UnsupportedDataException">
            <message>
              <![CDATA[Can't transform message payload: java.lang.RuntimeException: Response root element was not 'Envelope']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.UnsupportedDataException: Can't transform message payload: java.lang.RuntimeException: Response root element was not 'Envelope'
	at org.fourthline.cling.transport.impl.SOAPActionProcessorImpl.readBody(SOAPActionProcessorImpl.java:141)
	at org.fourthline.cling.test.control.InvalidActionXMLProcessingTest.readRequest(InvalidActionXMLProcessingTest.java:166)
	at org.fourthline.cling.test.control.InvalidActionXMLProcessingTest.readRequestDefaultFailure(InvalidActionXMLProcessingTest.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: java.lang.RuntimeException: Response root element was not 'Envelope'
	at org.fourthline.cling.transport.impl.SOAPActionProcessorImpl.readBodyElement(SOAPActionProcessorImpl.java:254)
	at org.fourthline.cling.transport.impl.SOAPActionProcessorImpl.readBody(SOAPActionProcessorImpl.java:136)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.UnsupportedDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRequestDefaultFailure -->
        <test-method status="PASS" signature="readRequestDefaultFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.control.InvalidActionXMLProcessingTest@feb3fa]" name="readRequestDefaultFailure" duration-ms="106" started-at="2017-11-30T00:21:23Z" data-provider="invalidXMLFile" finished-at="2017-11-30T00:21:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/control/request_missing_action_namespace.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.fourthline.cling.model.UnsupportedDataException">
            <message>
              <![CDATA[Can't transform message payload: org.fourthline.cling.model.UnsupportedDataException: Illegal or missing namespace on action request element: [SetSomeValue: null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.UnsupportedDataException: Can't transform message payload: org.fourthline.cling.model.UnsupportedDataException: Illegal or missing namespace on action request element: [SetSomeValue: null]
	at org.fourthline.cling.transport.impl.SOAPActionProcessorImpl.readBody(SOAPActionProcessorImpl.java:141)
	at org.fourthline.cling.test.control.InvalidActionXMLProcessingTest.readRequest(InvalidActionXMLProcessingTest.java:166)
	at org.fourthline.cling.test.control.InvalidActionXMLProcessingTest.readRequestDefaultFailure(InvalidActionXMLProcessingTest.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.fourthline.cling.model.UnsupportedDataException: Illegal or missing namespace on action request element: [SetSomeValue: null]
	at org.fourthline.cling.transport.impl.SOAPActionProcessorImpl.readActionRequestElement(SOAPActionProcessorImpl.java:307)
	at org.fourthline.cling.transport.impl.SOAPActionProcessorImpl.readBodyRequest(SOAPActionProcessorImpl.java:220)
	at org.fourthline.cling.transport.impl.SOAPActionProcessorImpl.readBody(SOAPActionProcessorImpl.java:138)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.UnsupportedDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRequestDefaultFailure -->
        <test-method status="PASS" signature="readRequestDefaultFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.control.InvalidActionXMLProcessingTest@feb3fa]" name="readRequestDefaultFailure" duration-ms="97" started-at="2017-11-30T00:21:23Z" data-provider="invalidXMLFile" finished-at="2017-11-30T00:21:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/control/request_invalid_action_namespace.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.fourthline.cling.model.UnsupportedDataException">
            <message>
              <![CDATA[Can't transform message payload: org.fourthline.cling.model.UnsupportedDataException: Illegal or missing namespace on action request element: [u:SetSomeValue: null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.UnsupportedDataException: Can't transform message payload: org.fourthline.cling.model.UnsupportedDataException: Illegal or missing namespace on action request element: [u:SetSomeValue: null]
	at org.fourthline.cling.transport.impl.SOAPActionProcessorImpl.readBody(SOAPActionProcessorImpl.java:141)
	at org.fourthline.cling.test.control.InvalidActionXMLProcessingTest.readRequest(InvalidActionXMLProcessingTest.java:166)
	at org.fourthline.cling.test.control.InvalidActionXMLProcessingTest.readRequestDefaultFailure(InvalidActionXMLProcessingTest.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.fourthline.cling.model.UnsupportedDataException: Illegal or missing namespace on action request element: [u:SetSomeValue: null]
	at org.fourthline.cling.transport.impl.SOAPActionProcessorImpl.readActionRequestElement(SOAPActionProcessorImpl.java:307)
	at org.fourthline.cling.transport.impl.SOAPActionProcessorImpl.readBodyRequest(SOAPActionProcessorImpl.java:220)
	at org.fourthline.cling.transport.impl.SOAPActionProcessorImpl.readBody(SOAPActionProcessorImpl.java:138)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.UnsupportedDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRequestDefaultFailure -->
        <test-method status="PASS" signature="readRequestPull(java.lang.String)[pri:0, instance:org.fourthline.cling.test.control.InvalidActionXMLProcessingTest@feb3fa]" name="readRequestPull" duration-ms="133" started-at="2017-11-30T00:21:23Z" data-provider="invalidXMLFile" finished-at="2017-11-30T00:21:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/control/request_missing_envelope.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRequestPull -->
        <test-method status="PASS" signature="readRequestPull(java.lang.String)[pri:0, instance:org.fourthline.cling.test.control.InvalidActionXMLProcessingTest@feb3fa]" name="readRequestPull" duration-ms="109" started-at="2017-11-30T00:21:23Z" data-provider="invalidXMLFile" finished-at="2017-11-30T00:21:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/control/request_missing_action_namespace.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRequestPull -->
        <test-method status="PASS" signature="readRequestPull(java.lang.String)[pri:0, instance:org.fourthline.cling.test.control.InvalidActionXMLProcessingTest@feb3fa]" name="readRequestPull" duration-ms="94" started-at="2017-11-30T00:21:23Z" data-provider="invalidXMLFile" finished-at="2017-11-30T00:21:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/control/request_invalid_action_namespace.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRequestPull -->
        <test-method status="PASS" signature="readRequestRecoverableFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.control.InvalidActionXMLProcessingTest@feb3fa]" name="readRequestRecoverableFailure" duration-ms="99" started-at="2017-11-30T00:21:23Z" data-provider="invalidRecoverableXMLFile" finished-at="2017-11-30T00:21:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/control/request_no_entityencoding.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.fourthline.cling.model.UnsupportedDataException">
            <message>
              <![CDATA[Can't transform message payload: org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 31; The reference to entity "bar" must end with the ';' delimiter.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.UnsupportedDataException: Can't transform message payload: org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 31; The reference to entity "bar" must end with the ';' delimiter.
	at org.fourthline.cling.transport.impl.SOAPActionProcessorImpl.readBody(SOAPActionProcessorImpl.java:141)
	at org.fourthline.cling.test.control.InvalidActionXMLProcessingTest.readRequest(InvalidActionXMLProcessingTest.java:166)
	at org.fourthline.cling.test.control.InvalidActionXMLProcessingTest.readRequestRecoverableFailure(InvalidActionXMLProcessingTest.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 31; The reference to entity "bar" must end with the ';' delimiter.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1472)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanEntityReference(XMLDocumentFragmentScannerImpl.java:1850)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3061)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:602)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:112)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:505)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:841)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:770)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:339)
	at org.fourthline.cling.transport.impl.SOAPActionProcessorImpl.readBody(SOAPActionProcessorImpl.java:134)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.UnsupportedDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRequestRecoverableFailure -->
        <test-method status="PASS" signature="readRequestRecoverableFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.control.InvalidActionXMLProcessingTest@feb3fa]" name="readRequestRecoverableFailure" duration-ms="143" started-at="2017-11-30T00:21:23Z" data-provider="invalidRecoverableXMLFile" finished-at="2017-11-30T00:21:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/control/request_wrong_termination.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.fourthline.cling.model.UnsupportedDataException">
            <message>
              <![CDATA[Can't transform message payload: org.xml.sax.SAXParseException; lineNumber: 9; columnNumber: 3; The element type "s:Envelope" must be terminated by the matching end-tag "</s:Envelope>".]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.UnsupportedDataException: Can't transform message payload: org.xml.sax.SAXParseException; lineNumber: 9; columnNumber: 3; The element type "s:Envelope" must be terminated by the matching end-tag "</s:Envelope>".
	at org.fourthline.cling.transport.impl.SOAPActionProcessorImpl.readBody(SOAPActionProcessorImpl.java:141)
	at org.fourthline.cling.test.control.InvalidActionXMLProcessingTest.readRequest(InvalidActionXMLProcessingTest.java:166)
	at org.fourthline.cling.test.control.InvalidActionXMLProcessingTest.readRequestRecoverableFailure(InvalidActionXMLProcessingTest.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.xml.sax.SAXParseException; lineNumber: 9; columnNumber: 3; The element type "s:Envelope" must be terminated by the matching end-tag "</s:Envelope>".
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1472)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanEndElement(XMLDocumentFragmentScannerImpl.java:1749)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2967)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:602)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:112)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:505)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:841)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:770)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:339)
	at org.fourthline.cling.transport.impl.SOAPActionProcessorImpl.readBody(SOAPActionProcessorImpl.java:134)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.UnsupportedDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRequestRecoverableFailure -->
        <test-method status="PASS" signature="readRequestRecovering(java.lang.String)[pri:0, instance:org.fourthline.cling.test.control.InvalidActionXMLProcessingTest@feb3fa]" name="readRequestRecovering" duration-ms="102" started-at="2017-11-30T00:21:24Z" data-provider="invalidRecoverableXMLFile" finished-at="2017-11-30T00:21:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/control/request_no_entityencoding.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRequestRecovering -->
        <test-method status="PASS" signature="readRequestRecovering(java.lang.String)[pri:0, instance:org.fourthline.cling.test.control.InvalidActionXMLProcessingTest@feb3fa]" name="readRequestRecovering" duration-ms="99" started-at="2017-11-30T00:21:24Z" data-provider="invalidRecoverableXMLFile" finished-at="2017-11-30T00:21:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/control/request_wrong_termination.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRequestRecovering -->
        <test-method status="PASS" signature="readRequestRecoveringFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.control.InvalidActionXMLProcessingTest@feb3fa]" name="readRequestRecoveringFailure" duration-ms="102" started-at="2017-11-30T00:21:24Z" data-provider="invalidUnrecoverableXMLFile" finished-at="2017-11-30T00:21:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/control/unrecoverable/naim_unity.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.fourthline.cling.model.UnsupportedDataException">
            <message>
              <![CDATA[Can't transform message payload: org.xmlpull.v1.XmlPullParserException: PI must not start with xml (position:unknown @16:23 in java.io.InputStreamReader@7a06ec) ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.UnsupportedDataException: Can't transform message payload: org.xmlpull.v1.XmlPullParserException: PI must not start with xml (position:unknown @16:23 in java.io.InputStreamReader@7a06ec) 
	at org.fourthline.cling.transport.impl.PullSOAPActionProcessorImpl.readBody(PullSOAPActionProcessorImpl.java:58)
	at org.fourthline.cling.transport.impl.RecoveringSOAPActionProcessorImpl.readBody(RecoveringSOAPActionProcessorImpl.java:59)
	at org.fourthline.cling.test.control.InvalidActionXMLProcessingTest.readRequest(InvalidActionXMLProcessingTest.java:166)
	at org.fourthline.cling.test.control.InvalidActionXMLProcessingTest.readRequestRecoveringFailure(InvalidActionXMLProcessingTest.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.xmlpull.v1.XmlPullParserException: PI must not start with xml (position:unknown @16:23 in java.io.InputStreamReader@7a06ec) 
	at org.kxml2.io.KXmlParser.exception(Unknown Source)
	at org.kxml2.io.KXmlParser.error(Unknown Source)
	at org.kxml2.io.KXmlParser.parseLegacy(Unknown Source)
	at org.kxml2.io.KXmlParser.nextImpl(Unknown Source)
	at org.kxml2.io.KXmlParser.next(Unknown Source)
	at org.seamless.xml.XmlPullParserUtils.searchTag(XmlPullParserUtils.java:91)
	at org.fourthline.cling.transport.impl.PullSOAPActionProcessorImpl.readBodyRequest(PullSOAPActionProcessorImpl.java:78)
	at org.fourthline.cling.transport.impl.PullSOAPActionProcessorImpl.readBody(PullSOAPActionProcessorImpl.java:56)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.UnsupportedDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRequestRecoveringFailure -->
        <test-method status="PASS" signature="uppercaseOutputArguments()[pri:0, instance:org.fourthline.cling.test.control.InvalidActionXMLProcessingTest@feb3fa]" name="uppercaseOutputArguments" duration-ms="7" started-at="2017-11-30T00:21:24Z" finished-at="2017-11-30T00:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uppercaseOutputArguments -->
      </class> <!-- org.fourthline.cling.test.control.InvalidActionXMLProcessingTest -->
      <class name="org.fourthline.cling.test.control.ActionInvokeIncomingTest">
        <test-method status="PASS" signature="incomingRemoteCallClientInfo()[pri:0, instance:org.fourthline.cling.test.control.ActionInvokeIncomingTest@e2cbe0]" name="incomingRemoteCallClientInfo" duration-ms="89" started-at="2017-11-30T00:21:17Z" finished-at="2017-11-30T00:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incomingRemoteCallClientInfo -->
        <test-method status="PASS" signature="incomingRemoteCallControlURINotFound()[pri:0, instance:org.fourthline.cling.test.control.ActionInvokeIncomingTest@e2cbe0]" name="incomingRemoteCallControlURINotFound" duration-ms="74" started-at="2017-11-30T00:21:17Z" finished-at="2017-11-30T00:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incomingRemoteCallControlURINotFound -->
        <test-method status="PASS" signature="incomingRemoteCallGet()[pri:0, instance:org.fourthline.cling.test.control.ActionInvokeIncomingTest@e2cbe0]" name="incomingRemoteCallGet" duration-ms="94" started-at="2017-11-30T00:21:17Z" finished-at="2017-11-30T00:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incomingRemoteCallGet -->
        <test-method status="PASS" signature="incomingRemoteCallGetConcurrent()[pri:0, instance:org.fourthline.cling.test.control.ActionInvokeIncomingTest@e2cbe0]" name="incomingRemoteCallGetConcurrent" duration-ms="2111" started-at="2017-11-30T00:21:18Z" finished-at="2017-11-30T00:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incomingRemoteCallGetConcurrent -->
        <test-method status="PASS" signature="incomingRemoteCallMethodException()[pri:0, instance:org.fourthline.cling.test.control.ActionInvokeIncomingTest@e2cbe0]" name="incomingRemoteCallMethodException" duration-ms="102" started-at="2017-11-30T00:21:20Z" finished-at="2017-11-30T00:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incomingRemoteCallMethodException -->
        <test-method status="PASS" signature="incomingRemoteCallNoContentType()[pri:0, instance:org.fourthline.cling.test.control.ActionInvokeIncomingTest@e2cbe0]" name="incomingRemoteCallNoContentType" duration-ms="90" started-at="2017-11-30T00:21:20Z" finished-at="2017-11-30T00:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incomingRemoteCallNoContentType -->
        <test-method status="PASS" signature="incomingRemoteCallQueryStateVariable()[pri:0, instance:org.fourthline.cling.test.control.ActionInvokeIncomingTest@e2cbe0]" name="incomingRemoteCallQueryStateVariable" duration-ms="79" started-at="2017-11-30T00:21:20Z" finished-at="2017-11-30T00:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incomingRemoteCallQueryStateVariable -->
        <test-method status="PASS" signature="incomingRemoteCallSet()[pri:0, instance:org.fourthline.cling.test.control.ActionInvokeIncomingTest@e2cbe0]" name="incomingRemoteCallSet" duration-ms="75" started-at="2017-11-30T00:21:20Z" finished-at="2017-11-30T00:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incomingRemoteCallSet -->
        <test-method status="PASS" signature="incomingRemoteCallWrongContentType()[pri:0, instance:org.fourthline.cling.test.control.ActionInvokeIncomingTest@e2cbe0]" name="incomingRemoteCallWrongContentType" duration-ms="99" started-at="2017-11-30T00:21:20Z" finished-at="2017-11-30T00:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incomingRemoteCallWrongContentType -->
      </class> <!-- org.fourthline.cling.test.control.ActionInvokeIncomingTest -->
      <class name="org.fourthline.cling.test.control.ActionInvokeOutgoingTest">
        <test-method status="PASS" signature="callLocalGet()[pri:0, instance:org.fourthline.cling.test.control.ActionInvokeOutgoingTest@15d3402]" name="callLocalGet" duration-ms="98" started-at="2017-11-30T00:21:20Z" finished-at="2017-11-30T00:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callLocalGet -->
        <test-method status="PASS" signature="callLocalSetException()[pri:0, instance:org.fourthline.cling.test.control.ActionInvokeOutgoingTest@15d3402]" name="callLocalSetException" duration-ms="101" started-at="2017-11-30T00:21:20Z" finished-at="2017-11-30T00:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callLocalSetException -->
        <test-method status="PASS" signature="callLocalWrongAction()[pri:0, instance:org.fourthline.cling.test.control.ActionInvokeOutgoingTest@15d3402]" name="callLocalWrongAction" duration-ms="102" started-at="2017-11-30T00:21:20Z" finished-at="2017-11-30T00:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callLocalWrongAction -->
        <test-method status="PASS" signature="callRemoteGet()[pri:0, instance:org.fourthline.cling.test.control.ActionInvokeOutgoingTest@15d3402]" name="callRemoteGet" duration-ms="95" started-at="2017-11-30T00:21:20Z" finished-at="2017-11-30T00:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callRemoteGet -->
        <test-method status="PASS" signature="callRemoteGetFailure()[pri:0, instance:org.fourthline.cling.test.control.ActionInvokeOutgoingTest@15d3402]" name="callRemoteGetFailure" duration-ms="104" started-at="2017-11-30T00:21:21Z" finished-at="2017-11-30T00:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callRemoteGetFailure -->
        <test-method status="PASS" signature="callRemoteGetNoResponse()[pri:0, instance:org.fourthline.cling.test.control.ActionInvokeOutgoingTest@15d3402]" name="callRemoteGetNoResponse" duration-ms="110" started-at="2017-11-30T00:21:21Z" finished-at="2017-11-30T00:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callRemoteGetNoResponse -->
        <test-method status="PASS" signature="callRemoteGetNotFoundFailure()[pri:0, instance:org.fourthline.cling.test.control.ActionInvokeOutgoingTest@15d3402]" name="callRemoteGetNotFoundFailure" duration-ms="96" started-at="2017-11-30T00:21:21Z" finished-at="2017-11-30T00:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callRemoteGetNotFoundFailure -->
        <test-method status="PASS" signature="callRemoteNegativeValue()[pri:0, instance:org.fourthline.cling.test.control.ActionInvokeOutgoingTest@15d3402]" name="callRemoteNegativeValue" duration-ms="102" started-at="2017-11-30T00:21:21Z" finished-at="2017-11-30T00:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callRemoteNegativeValue -->
        <test-method status="PASS" signature="callRemoteQueryStateVariable()[pri:0, instance:org.fourthline.cling.test.control.ActionInvokeOutgoingTest@15d3402]" name="callRemoteQueryStateVariable" duration-ms="112" started-at="2017-11-30T00:21:21Z" finished-at="2017-11-30T00:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callRemoteQueryStateVariable -->
      </class> <!-- org.fourthline.cling.test.control.ActionInvokeOutgoingTest -->
    </test> <!-- Control -->
    <test name="GENA" duration-ms="3252" started-at="2017-11-29T17:21:24Z" finished-at="2017-11-29T17:21:27Z">
      <class name="org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest">
        <test-method status="PASS" signature="readDefaultFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest@3bd550]" name="readDefaultFailure" duration-ms="107" started-at="2017-11-30T00:21:24Z" data-provider="invalidXMLFile" finished-at="2017-11-30T00:21:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/event/invalid_root_element.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.fourthline.cling.model.UnsupportedDataException">
            <message>
              <![CDATA[Can't transform message payload: Root element was not 'propertyset']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.UnsupportedDataException: Can't transform message payload: Root element was not 'propertyset'
	at org.fourthline.cling.transport.impl.GENAEventProcessorImpl.readBody(GENAEventProcessorImpl.java:108)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.read(InvalidEventXMLProcessingTest.java:177)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.readDefaultFailure(InvalidEventXMLProcessingTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: java.lang.RuntimeException: Root element was not 'propertyset'
	at org.fourthline.cling.transport.impl.GENAEventProcessorImpl.readPropertysetElement(GENAEventProcessorImpl.java:124)
	at org.fourthline.cling.transport.impl.GENAEventProcessorImpl.readBody(GENAEventProcessorImpl.java:103)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.UnsupportedDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readDefaultFailure -->
        <test-method status="PASS" signature="readPull(java.lang.String)[pri:0, instance:org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest@3bd550]" name="readPull" duration-ms="104" started-at="2017-11-30T00:21:24Z" data-provider="invalidXMLFile" finished-at="2017-11-30T00:21:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/event/invalid_root_element.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readPull -->
        <test-method status="PASS" signature="readRecoverableFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest@3bd550]" name="readRecoverableFailure" duration-ms="104" started-at="2017-11-30T00:21:25Z" data-provider="invalidRecoverableXMLFile" finished-at="2017-11-30T00:21:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/event/truncated.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.fourthline.cling.model.UnsupportedDataException">
            <message>
              <![CDATA[Can't transform message payload: The element type "e:propertyset" must be terminated by the matching end-tag "</e:propertyset>".]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.UnsupportedDataException: Can't transform message payload: The element type "e:propertyset" must be terminated by the matching end-tag "</e:propertyset>".
	at org.fourthline.cling.transport.impl.GENAEventProcessorImpl.readBody(GENAEventProcessorImpl.java:108)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.read(InvalidEventXMLProcessingTest.java:177)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.readRecoverableFailure(InvalidEventXMLProcessingTest.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.xml.sax.SAXParseException; lineNumber: 32; columnNumber: 3; The element type "e:propertyset" must be terminated by the matching end-tag "</e:propertyset>".
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1472)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanEndElement(XMLDocumentFragmentScannerImpl.java:1749)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2967)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:602)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:112)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:505)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:841)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:770)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:339)
	at org.fourthline.cling.transport.impl.GENAEventProcessorImpl.readBody(GENAEventProcessorImpl.java:99)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.UnsupportedDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoverableFailure -->
        <test-method status="PASS" signature="readRecoverableFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest@3bd550]" name="readRecoverableFailure" duration-ms="104" started-at="2017-11-30T00:21:25Z" data-provider="invalidRecoverableXMLFile" finished-at="2017-11-30T00:21:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/event/orange_liveradio.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.fourthline.cling.model.UnsupportedDataException">
            <message>
              <![CDATA[Can't transform message payload: The processing instruction target matching "[xX][mM][lL]" is not allowed.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.UnsupportedDataException: Can't transform message payload: The processing instruction target matching "[xX][mM][lL]" is not allowed.
	at org.fourthline.cling.transport.impl.GENAEventProcessorImpl.readBody(GENAEventProcessorImpl.java:108)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.read(InvalidEventXMLProcessingTest.java:177)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.readRecoverableFailure(InvalidEventXMLProcessingTest.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.xml.sax.SAXParseException; lineNumber: 11; columnNumber: 6; The processing instruction target matching "[xX][mM][lL]" is not allowed.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1472)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.scanPIData(XMLScanner.java:746)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanPIData(XMLDocumentFragmentScannerImpl.java:1014)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.scanPI(XMLScanner.java:714)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:907)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:602)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:112)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:505)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:841)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:770)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:339)
	at org.fourthline.cling.transport.impl.GENAEventProcessorImpl.readBody(GENAEventProcessorImpl.java:99)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.UnsupportedDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoverableFailure -->
        <test-method status="PASS" signature="readRecovering(java.lang.String)[pri:0, instance:org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest@3bd550]" name="readRecovering" duration-ms="108" started-at="2017-11-30T00:21:25Z" data-provider="invalidRecoverableXMLFile" finished-at="2017-11-30T00:21:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/event/truncated.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecovering -->
        <test-method status="PASS" signature="readRecovering(java.lang.String)[pri:0, instance:org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest@3bd550]" name="readRecovering" duration-ms="103" started-at="2017-11-30T00:21:25Z" data-provider="invalidRecoverableXMLFile" finished-at="2017-11-30T00:21:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/event/orange_liveradio.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecovering -->
        <test-method status="PASS" signature="readRecoveringFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest@3bd550]" name="readRecoveringFailure" duration-ms="105" started-at="2017-11-30T00:21:25Z" data-provider="invalidUnrecoverableXMLFile" finished-at="2017-11-30T00:21:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/event/unrecoverable/denon_avr4306.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.xmlpull.v1.XmlPullParserException">
            <message>
              <![CDATA[expected: '>' actual: '&' (position:START_TAG (empty) <CurrentTrackDuration val='0:00:00'>@12:42 in java.io.InputStreamReader@1322f9d) ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.xmlpull.v1.XmlPullParserException: expected: '>' actual: '&' (position:START_TAG (empty) <CurrentTrackDuration val='0:00:00'>@12:42 in java.io.InputStreamReader@1322f9d) 
	at org.kxml2.io.KXmlParser.exception(Unknown Source)
	at org.kxml2.io.KXmlParser.error(Unknown Source)
	at org.kxml2.io.KXmlParser.read(Unknown Source)
	at org.kxml2.io.KXmlParser.parseStartTag(Unknown Source)
	at org.kxml2.io.KXmlParser.nextImpl(Unknown Source)
	at org.kxml2.io.KXmlParser.next(Unknown Source)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.parseLastChangeXML(InvalidEventXMLProcessingTest.java:202)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.read(InvalidEventXMLProcessingTest.java:187)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.readRecoveringFailure(InvalidEventXMLProcessingTest.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.xmlpull.v1.XmlPullParserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringFailure -->
        <test-method status="PASS" signature="readRecoveringFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest@3bd550]" name="readRecoveringFailure" duration-ms="104" started-at="2017-11-30T00:21:25Z" data-provider="invalidUnrecoverableXMLFile" finished-at="2017-11-30T00:21:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/event/unrecoverable/philips_np2900.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.fourthline.cling.model.UnsupportedDataException">
            <message>
              <![CDATA[Can't transform message payload: attr value delimiter missing! (position:START_TAG <font size='urn:schemas-upnp-org:event-1-0'>@34:15 in java.io.InputStreamReader@162f559) ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.UnsupportedDataException: Can't transform message payload: attr value delimiter missing! (position:START_TAG <font size='urn:schemas-upnp-org:event-1-0'>@34:15 in java.io.InputStreamReader@162f559) 
	at org.fourthline.cling.transport.impl.PullGENAEventProcessorImpl.readBody(PullGENAEventProcessorImpl.java:61)
	at org.fourthline.cling.transport.impl.RecoveringGENAEventProcessorImpl.readBody(RecoveringGENAEventProcessorImpl.java:57)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.read(InvalidEventXMLProcessingTest.java:177)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.readRecoveringFailure(InvalidEventXMLProcessingTest.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.xmlpull.v1.XmlPullParserException: attr value delimiter missing! (position:START_TAG <font size='urn:schemas-upnp-org:event-1-0'>@34:15 in java.io.InputStreamReader@162f559) 
	at org.kxml2.io.KXmlParser.exception(Unknown Source)
	at org.kxml2.io.KXmlParser.error(Unknown Source)
	at org.kxml2.io.KXmlParser.parseStartTag(Unknown Source)
	at org.kxml2.io.KXmlParser.nextImpl(Unknown Source)
	at org.kxml2.io.KXmlParser.next(Unknown Source)
	at org.kxml2.io.KXmlParser.nextText(Unknown Source)
	at org.fourthline.cling.transport.impl.PullGENAEventProcessorImpl.readProperty(PullGENAEventProcessorImpl.java:88)
	at org.fourthline.cling.transport.impl.PullGENAEventProcessorImpl.readProperties(PullGENAEventProcessorImpl.java:72)
	at org.fourthline.cling.transport.impl.PullGENAEventProcessorImpl.readBody(PullGENAEventProcessorImpl.java:59)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.UnsupportedDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringFailure -->
        <test-method status="PASS" signature="readRecoveringFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest@3bd550]" name="readRecoveringFailure" duration-ms="103" started-at="2017-11-30T00:21:25Z" data-provider="invalidUnrecoverableXMLFile" finished-at="2017-11-30T00:21:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/event/unrecoverable/philips_sla5220.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.xmlpull.v1.XmlPullParserException">
            <message>
              <![CDATA[Attr.value missing f. urn:schemas-upnp-org:metadata-1-0 (position:START_TAG <CurrentTrackMetaData val='<DIDL-Lite xmlns=' urn:schemas-upnp-org:metadata-1-0='null'>@9:83 in java.io.InputStreamReader@7bddad) ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.xmlpull.v1.XmlPullParserException: Attr.value missing f. urn:schemas-upnp-org:metadata-1-0 (position:START_TAG <CurrentTrackMetaData val='<DIDL-Lite xmlns=' urn:schemas-upnp-org:metadata-1-0='null'>@9:83 in java.io.InputStreamReader@7bddad) 
	at org.kxml2.io.KXmlParser.exception(Unknown Source)
	at org.kxml2.io.KXmlParser.error(Unknown Source)
	at org.kxml2.io.KXmlParser.parseStartTag(Unknown Source)
	at org.kxml2.io.KXmlParser.nextImpl(Unknown Source)
	at org.kxml2.io.KXmlParser.next(Unknown Source)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.parseLastChangeXML(InvalidEventXMLProcessingTest.java:202)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.read(InvalidEventXMLProcessingTest.java:187)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.readRecoveringFailure(InvalidEventXMLProcessingTest.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.xmlpull.v1.XmlPullParserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringFailure -->
        <test-method status="PASS" signature="readRecoveringFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest@3bd550]" name="readRecoveringFailure" duration-ms="103" started-at="2017-11-30T00:21:25Z" data-provider="invalidUnrecoverableXMLFile" finished-at="2017-11-30T00:21:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/event/unrecoverable/terratec_noxon2.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.fourthline.cling.model.UnsupportedDataException">
            <message>
              <![CDATA[Can't transform message payload: name expected (position:START_TAG <sEnvelopesencodingStyle>@23:55 in java.io.InputStreamReader@313fcc) ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.UnsupportedDataException: Can't transform message payload: name expected (position:START_TAG <sEnvelopesencodingStyle>@23:55 in java.io.InputStreamReader@313fcc) 
	at org.fourthline.cling.transport.impl.PullGENAEventProcessorImpl.readBody(PullGENAEventProcessorImpl.java:61)
	at org.fourthline.cling.transport.impl.RecoveringGENAEventProcessorImpl.readBody(RecoveringGENAEventProcessorImpl.java:57)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.read(InvalidEventXMLProcessingTest.java:177)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.readRecoveringFailure(InvalidEventXMLProcessingTest.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.xmlpull.v1.XmlPullParserException: name expected (position:START_TAG <sEnvelopesencodingStyle>@23:55 in java.io.InputStreamReader@313fcc) 
	at org.kxml2.io.KXmlParser.exception(Unknown Source)
	at org.kxml2.io.KXmlParser.error(Unknown Source)
	at org.kxml2.io.KXmlParser.readName(Unknown Source)
	at org.kxml2.io.KXmlParser.parseStartTag(Unknown Source)
	at org.kxml2.io.KXmlParser.nextImpl(Unknown Source)
	at org.kxml2.io.KXmlParser.next(Unknown Source)
	at org.kxml2.io.KXmlParser.nextText(Unknown Source)
	at org.fourthline.cling.transport.impl.PullGENAEventProcessorImpl.readProperty(PullGENAEventProcessorImpl.java:88)
	at org.fourthline.cling.transport.impl.PullGENAEventProcessorImpl.readProperties(PullGENAEventProcessorImpl.java:72)
	at org.fourthline.cling.transport.impl.PullGENAEventProcessorImpl.readBody(PullGENAEventProcessorImpl.java:59)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.UnsupportedDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringFailure -->
        <test-method status="PASS" signature="readRecoveringFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest@3bd550]" name="readRecoveringFailure" duration-ms="103" started-at="2017-11-30T00:21:25Z" data-provider="invalidUnrecoverableXMLFile" finished-at="2017-11-30T00:21:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/event/unrecoverable/marantz_mcr603.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.xmlpull.v1.XmlPullParserException">
            <message>
              <![CDATA[unterminated entity ref (position:START_TAG <CurrentTrackURI val=''>@19:129 in java.io.InputStreamReader@1b0dcab) ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.xmlpull.v1.XmlPullParserException: unterminated entity ref (position:START_TAG <CurrentTrackURI val=''>@19:129 in java.io.InputStreamReader@1b0dcab) 
	at org.kxml2.io.KXmlParser.exception(Unknown Source)
	at org.kxml2.io.KXmlParser.error(Unknown Source)
	at org.kxml2.io.KXmlParser.pushEntity(Unknown Source)
	at org.kxml2.io.KXmlParser.pushText(Unknown Source)
	at org.kxml2.io.KXmlParser.parseStartTag(Unknown Source)
	at org.kxml2.io.KXmlParser.nextImpl(Unknown Source)
	at org.kxml2.io.KXmlParser.next(Unknown Source)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.parseLastChangeXML(InvalidEventXMLProcessingTest.java:202)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.read(InvalidEventXMLProcessingTest.java:187)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.readRecoveringFailure(InvalidEventXMLProcessingTest.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.xmlpull.v1.XmlPullParserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringFailure -->
        <test-method status="PASS" signature="readRecoveringFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest@3bd550]" name="readRecoveringFailure" duration-ms="101" started-at="2017-11-30T00:21:25Z" data-provider="invalidUnrecoverableXMLFile" finished-at="2017-11-30T00:21:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/event/unrecoverable/teac_wap4500.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.fourthline.cling.model.UnsupportedDataException">
            <message>
              <![CDATA[Can't transform message payload: Attr.value missing f. urn:schemas-upnp-org:metadata-1-0 (position:START_TAG <AVTransportURIMetaData val='<DIDL-Lite xmlns=' urn:schemas-upnp-org:metadata-1-0='null'>@14:81 in java.io.InputStreamReader@325e14) ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.UnsupportedDataException: Can't transform message payload: Attr.value missing f. urn:schemas-upnp-org:metadata-1-0 (position:START_TAG <AVTransportURIMetaData val='<DIDL-Lite xmlns=' urn:schemas-upnp-org:metadata-1-0='null'>@14:81 in java.io.InputStreamReader@325e14) 
	at org.fourthline.cling.transport.impl.PullGENAEventProcessorImpl.readBody(PullGENAEventProcessorImpl.java:61)
	at org.fourthline.cling.transport.impl.RecoveringGENAEventProcessorImpl.readBody(RecoveringGENAEventProcessorImpl.java:57)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.read(InvalidEventXMLProcessingTest.java:177)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.readRecoveringFailure(InvalidEventXMLProcessingTest.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.xmlpull.v1.XmlPullParserException: Attr.value missing f. urn:schemas-upnp-org:metadata-1-0 (position:START_TAG <AVTransportURIMetaData val='<DIDL-Lite xmlns=' urn:schemas-upnp-org:metadata-1-0='null'>@14:81 in java.io.InputStreamReader@325e14) 
	at org.kxml2.io.KXmlParser.exception(Unknown Source)
	at org.kxml2.io.KXmlParser.error(Unknown Source)
	at org.kxml2.io.KXmlParser.parseStartTag(Unknown Source)
	at org.kxml2.io.KXmlParser.nextImpl(Unknown Source)
	at org.kxml2.io.KXmlParser.next(Unknown Source)
	at org.fourthline.cling.transport.impl.PullGENAEventProcessorImpl.readProperties(PullGENAEventProcessorImpl.java:69)
	at org.fourthline.cling.transport.impl.PullGENAEventProcessorImpl.readBody(PullGENAEventProcessorImpl.java:59)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.UnsupportedDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringFailure -->
        <test-method status="PASS" signature="readRecoveringFailure(java.lang.String)[pri:0, instance:org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest@3bd550]" name="readRecoveringFailure" duration-ms="104" started-at="2017-11-30T00:21:26Z" data-provider="invalidUnrecoverableXMLFile" finished-at="2017-11-30T00:21:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/invalidxml/event/unrecoverable/technisat_digi_hd8+.xml]]>
              </value>
            </param>
          </params>
          <exception class="org.fourthline.cling.model.UnsupportedDataException">
            <message>
              <![CDATA[Can't transform message payload: name expected (position:START_TAG <CurrentTrackMetaData val='<DIDL-Lite' xmlns='urn:schemas-upnp-org:metadata-1-0/DIDL-Lite/' xmlns:dc='http://purl.org/dc/elements/1.1/' xmlns:upnp='urn:schemas-upnp-org:metadata-1-0/upnp/'>@12:320 in java.io.InputStreamReader@2fc1d) ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.model.UnsupportedDataException: Can't transform message payload: name expected (position:START_TAG <CurrentTrackMetaData val='<DIDL-Lite' xmlns='urn:schemas-upnp-org:metadata-1-0/DIDL-Lite/' xmlns:dc='http://purl.org/dc/elements/1.1/' xmlns:upnp='urn:schemas-upnp-org:metadata-1-0/upnp/'>@12:320 in java.io.InputStreamReader@2fc1d) 
	at org.fourthline.cling.transport.impl.PullGENAEventProcessorImpl.readBody(PullGENAEventProcessorImpl.java:61)
	at org.fourthline.cling.transport.impl.RecoveringGENAEventProcessorImpl.readBody(RecoveringGENAEventProcessorImpl.java:57)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.read(InvalidEventXMLProcessingTest.java:177)
	at org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest.readRecoveringFailure(InvalidEventXMLProcessingTest.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.xmlpull.v1.XmlPullParserException: name expected (position:START_TAG <CurrentTrackMetaData val='<DIDL-Lite' xmlns='urn:schemas-upnp-org:metadata-1-0/DIDL-Lite/' xmlns:dc='http://purl.org/dc/elements/1.1/' xmlns:upnp='urn:schemas-upnp-org:metadata-1-0/upnp/'>@12:320 in java.io.InputStreamReader@2fc1d) 
	at org.kxml2.io.KXmlParser.exception(Unknown Source)
	at org.kxml2.io.KXmlParser.error(Unknown Source)
	at org.kxml2.io.KXmlParser.readName(Unknown Source)
	at org.kxml2.io.KXmlParser.parseStartTag(Unknown Source)
	at org.kxml2.io.KXmlParser.nextImpl(Unknown Source)
	at org.kxml2.io.KXmlParser.next(Unknown Source)
	at org.fourthline.cling.transport.impl.PullGENAEventProcessorImpl.readProperties(PullGENAEventProcessorImpl.java:69)
	at org.fourthline.cling.transport.impl.PullGENAEventProcessorImpl.readBody(PullGENAEventProcessorImpl.java:59)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.model.UnsupportedDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRecoveringFailure -->
      </class> <!-- org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest -->
      <class name="org.fourthline.cling.test.gena.OutgoingSubscriptionLifecycleTest">
        <test-method status="PASS" signature="subscriptionLifecycle()[pri:0, instance:org.fourthline.cling.test.gena.OutgoingSubscriptionLifecycleTest@11161c7]" name="subscriptionLifecycle" duration-ms="101" started-at="2017-11-30T00:21:26Z" finished-at="2017-11-30T00:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subscriptionLifecycle -->
        <test-method status="PASS" signature="subscriptionLifecycleNotifyBeforeResponse()[pri:0, instance:org.fourthline.cling.test.gena.OutgoingSubscriptionLifecycleTest@11161c7]" name="subscriptionLifecycleNotifyBeforeResponse" duration-ms="1099" started-at="2017-11-30T00:21:26Z" finished-at="2017-11-30T00:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subscriptionLifecycleNotifyBeforeResponse -->
      </class> <!-- org.fourthline.cling.test.gena.OutgoingSubscriptionLifecycleTest -->
      <class name="org.fourthline.cling.test.gena.EventXMLProcessingTest">
        <test-method status="PASS" signature="writeReadRequest()[pri:0, instance:org.fourthline.cling.test.gena.EventXMLProcessingTest@4ed9f0]" name="writeReadRequest" duration-ms="83" started-at="2017-11-30T00:21:24Z" finished-at="2017-11-30T00:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeReadRequest -->
        <test-method status="PASS" signature="writeReadRequestPull()[pri:0, instance:org.fourthline.cling.test.gena.EventXMLProcessingTest@4ed9f0]" name="writeReadRequestPull" duration-ms="81" started-at="2017-11-30T00:21:24Z" finished-at="2017-11-30T00:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeReadRequestPull -->
        <test-method status="PASS" signature="writeReadRequestRecovering()[pri:0, instance:org.fourthline.cling.test.gena.EventXMLProcessingTest@4ed9f0]" name="writeReadRequestRecovering" duration-ms="115" started-at="2017-11-30T00:21:24Z" finished-at="2017-11-30T00:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeReadRequestRecovering -->
      </class> <!-- org.fourthline.cling.test.gena.EventXMLProcessingTest -->
      <class name="org.fourthline.cling.test.gena.OutgoingSubscriptionFailureTest">
        <test-method status="PASS" signature="subscriptionLifecycleMissedEvent()[pri:0, instance:org.fourthline.cling.test.gena.OutgoingSubscriptionFailureTest@3a8624]" name="subscriptionLifecycleMissedEvent" duration-ms="109" started-at="2017-11-30T00:21:26Z" finished-at="2017-11-30T00:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subscriptionLifecycleMissedEvent -->
        <test-method status="PASS" signature="subscriptionLifecycleNetworkOff()[pri:0, instance:org.fourthline.cling.test.gena.OutgoingSubscriptionFailureTest@3a8624]" name="subscriptionLifecycleNetworkOff" duration-ms="100" started-at="2017-11-30T00:21:26Z" finished-at="2017-11-30T00:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subscriptionLifecycleNetworkOff -->
      </class> <!-- org.fourthline.cling.test.gena.OutgoingSubscriptionFailureTest -->
      <class name="org.fourthline.cling.test.gena.IncomingSubscriptionLifecycleTest">
        <test-method status="PASS" signature="subscriptionLifecycle()[pri:0, instance:org.fourthline.cling.test.gena.IncomingSubscriptionLifecycleTest@1ce4f0a]" name="subscriptionLifecycle" duration-ms="101" started-at="2017-11-30T00:21:24Z" finished-at="2017-11-30T00:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subscriptionLifecycle -->
        <test-method status="PASS" signature="subscriptionLifecycleFailedResponse()[pri:0, instance:org.fourthline.cling.test.gena.IncomingSubscriptionLifecycleTest@1ce4f0a]" name="subscriptionLifecycleFailedResponse" duration-ms="100" started-at="2017-11-30T00:21:24Z" finished-at="2017-11-30T00:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subscriptionLifecycleFailedResponse -->
      </class> <!-- org.fourthline.cling.test.gena.IncomingSubscriptionLifecycleTest -->
    </test> <!-- GENA -->
    <test name="Protocol" duration-ms="125" started-at="2017-11-29T17:21:27Z" finished-at="2017-11-29T17:21:27Z">
      <class name="org.fourthline.cling.test.protocol.ProtocolFactoryTest">
        <test-method status="PASS" signature="noSyncProtocol()[pri:0, instance:org.fourthline.cling.test.protocol.ProtocolFactoryTest@83b407]" name="noSyncProtocol" duration-ms="67" started-at="2017-11-30T00:21:27Z" finished-at="2017-11-30T00:21:27Z">
          <exception class="org.fourthline.cling.protocol.ProtocolCreationException">
            <message>
              <![CDATA[Protocol for message type not found: (StreamRequestMessage) NOTIFY /dev/1234/upnp-org/SwitchPower/invalid]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.fourthline.cling.protocol.ProtocolCreationException: Protocol for message type not found: (StreamRequestMessage) NOTIFY /dev/1234/upnp-org/SwitchPower/invalid
	at org.fourthline.cling.protocol.ProtocolFactoryImpl.createReceivingSync(ProtocolFactoryImpl.java:198)
	at org.fourthline.cling.test.protocol.ProtocolFactoryTest.noSyncProtocol(ProtocolFactoryTest.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.fourthline.cling.protocol.ProtocolCreationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noSyncProtocol -->
        <test-method status="PASS" signature="receivingEvent()[pri:0, instance:org.fourthline.cling.test.protocol.ProtocolFactoryTest@83b407]" name="receivingEvent" duration-ms="55" started-at="2017-11-30T00:21:27Z" finished-at="2017-11-30T00:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receivingEvent -->
      </class> <!-- org.fourthline.cling.test.protocol.ProtocolFactoryTest -->
    </test> <!-- Protocol -->
    <test name="Examples" duration-ms="5081" started-at="2017-11-29T17:21:27Z" finished-at="2017-11-29T17:21:32Z">
      <class name="example.localservice.BasicBindingTest">
        <test-method status="PASS" signature="invokeActions(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.localservice.BasicBindingTest@3108bc]" name="invokeActions" duration-ms="4" started-at="2017-11-30T00:21:29Z" data-provider="devices" finished-at="2017-11-30T00:21:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeActions -->
        <test-method status="PASS" signature="invokeActions(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.localservice.BasicBindingTest@3108bc]" name="invokeActions" duration-ms="2" started-at="2017-11-30T00:21:29Z" data-provider="devices" finished-at="2017-11-30T00:21:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeActions -->
        <test-method status="PASS" signature="invokeActions(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.localservice.BasicBindingTest@3108bc]" name="invokeActions" duration-ms="2" started-at="2017-11-30T00:21:29Z" data-provider="devices" finished-at="2017-11-30T00:21:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeActions -->
        <test-method status="PASS" signature="invokeActions(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.localservice.BasicBindingTest@3108bc]" name="invokeActions" duration-ms="1" started-at="2017-11-30T00:21:29Z" data-provider="devices" finished-at="2017-11-30T00:21:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeActions -->
        <test-method status="PASS" signature="validateBinding(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.localservice.BasicBindingTest@3108bc]" name="validateBinding" duration-ms="0" started-at="2017-11-30T00:21:29Z" data-provider="devices" finished-at="2017-11-30T00:21:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBinding -->
        <test-method status="PASS" signature="validateBinding(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.localservice.BasicBindingTest@3108bc]" name="validateBinding" duration-ms="0" started-at="2017-11-30T00:21:29Z" data-provider="devices" finished-at="2017-11-30T00:21:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBinding -->
        <test-method status="PASS" signature="validateBinding(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.localservice.BasicBindingTest@3108bc]" name="validateBinding" duration-ms="1" started-at="2017-11-30T00:21:29Z" data-provider="devices" finished-at="2017-11-30T00:21:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBinding -->
        <test-method status="PASS" signature="validateBinding(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.localservice.BasicBindingTest@3108bc]" name="validateBinding" duration-ms="0" started-at="2017-11-30T00:21:29Z" data-provider="devices" finished-at="2017-11-30T00:21:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBinding -->
      </class> <!-- example.localservice.BasicBindingTest -->
      <class name="example.localservice.EventProviderTest">
        <test-method status="PASS" signature="bundleSeveralVariables()[pri:0, instance:example.localservice.EventProviderTest@235b8e]" name="bundleSeveralVariables" duration-ms="101" started-at="2017-11-30T00:21:30Z" finished-at="2017-11-30T00:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bundleSeveralVariables -->
        <test-method status="PASS" signature="moderateMaxRate()[pri:0, instance:example.localservice.EventProviderTest@235b8e]" name="moderateMaxRate" duration-ms="800" started-at="2017-11-30T00:21:30Z" finished-at="2017-11-30T00:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- moderateMaxRate -->
        <test-method status="PASS" signature="moderateMinDelta()[pri:0, instance:example.localservice.EventProviderTest@235b8e]" name="moderateMinDelta" duration-ms="151" started-at="2017-11-30T00:21:31Z" finished-at="2017-11-30T00:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- moderateMinDelta -->
        <test-method status="PASS" signature="subscriptionLifecycleChangeSupport()[pri:0, instance:example.localservice.EventProviderTest@235b8e]" name="subscriptionLifecycleChangeSupport" duration-ms="100" started-at="2017-11-30T00:21:31Z" finished-at="2017-11-30T00:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subscriptionLifecycleChangeSupport -->
        <test-method status="PASS" signature="subscriptionLifecycle()[pri:0, instance:example.localservice.EventProviderTest@235b8e]" name="subscriptionLifecycle" duration-ms="99" started-at="2017-11-30T00:21:31Z" finished-at="2017-11-30T00:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subscriptionLifecycle -->
      </class> <!-- example.localservice.EventProviderTest -->
      <class name="example.localservice.RemoteClientInfoTest">
        <test-method status="PASS" signature="invokeActions(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.localservice.RemoteClientInfoTest@10736d9]" name="invokeActions" duration-ms="1" started-at="2017-11-30T00:21:32Z" data-provider="devices" finished-at="2017-11-30T00:21:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeActions -->
      </class> <!-- example.localservice.RemoteClientInfoTest -->
      <class name="example.registry.RegistryBrowseTest">
        <test-method status="PASS" signature="cleanupRemoteDevice()[pri:0, instance:example.registry.RegistryBrowseTest@1423665]" name="cleanupRemoteDevice" duration-ms="99" started-at="2017-11-30T00:21:27Z" finished-at="2017-11-30T00:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanupRemoteDevice -->
        <test-method status="PASS" signature="findDevice()[pri:0, instance:example.registry.RegistryBrowseTest@1423665]" name="findDevice" duration-ms="99" started-at="2017-11-30T00:21:27Z" finished-at="2017-11-30T00:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findDevice -->
        <test-method status="PASS" signature="findDeviceByType()[pri:0, instance:example.registry.RegistryBrowseTest@1423665]" name="findDeviceByType" duration-ms="91" started-at="2017-11-30T00:21:27Z" finished-at="2017-11-30T00:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findDeviceByType -->
        <test-method status="PASS" signature="findLocalDevice()[pri:0, instance:example.registry.RegistryBrowseTest@1423665]" name="findLocalDevice" duration-ms="98" started-at="2017-11-30T00:21:28Z" finished-at="2017-11-30T00:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findLocalDevice -->
        <test-method status="PASS" signature="findLocalDeviceInvalidRelativePath()[pri:0, instance:example.registry.RegistryBrowseTest@1423665]" name="findLocalDeviceInvalidRelativePath" duration-ms="99" started-at="2017-11-30T00:21:28Z" finished-at="2017-11-30T00:21:28Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Resource URI can not be absolute, only path and query:http://host/invalid/absolute/URI]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Resource URI can not be absolute, only path and query:http://host/invalid/absolute/URI
	at org.fourthline.cling.registry.RegistryImpl.getResource(RegistryImpl.java:265)
	at org.fourthline.cling.registry.RegistryImpl.getResource(RegistryImpl.java:294)
	at example.registry.RegistryBrowseTest.findLocalDeviceInvalidRelativePath(RegistryBrowseTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findLocalDeviceInvalidRelativePath -->
      </class> <!-- example.registry.RegistryBrowseTest -->
      <class name="example.localservice.AllowedValueTest">
        <test-method status="PASS" signature="validateBinding(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.localservice.AllowedValueTest@9ba398]" name="validateBinding" duration-ms="1" started-at="2017-11-30T00:21:29Z" data-provider="devices" finished-at="2017-11-30T00:21:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBinding -->
        <test-method status="PASS" signature="validateBinding(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.localservice.AllowedValueTest@9ba398]" name="validateBinding" duration-ms="0" started-at="2017-11-30T00:21:29Z" data-provider="devices" finished-at="2017-11-30T00:21:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBinding -->
      </class> <!-- example.localservice.AllowedValueTest -->
      <class name="example.controlpoint.SearchExecuteTest">
        <test-method status="PASS" signature="searchAll()[pri:0, instance:example.controlpoint.SearchExecuteTest@286778]" name="searchAll" duration-ms="100" started-at="2017-11-30T00:21:31Z" finished-at="2017-11-30T00:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchAll -->
        <test-method status="PASS" signature="searchDefaults()[pri:0, instance:example.controlpoint.SearchExecuteTest@286778]" name="searchDefaults" duration-ms="98" started-at="2017-11-30T00:21:31Z" finished-at="2017-11-30T00:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchDefaults -->
        <test-method status="PASS" signature="searchDeviceType()[pri:0, instance:example.controlpoint.SearchExecuteTest@286778]" name="searchDeviceType" duration-ms="98" started-at="2017-11-30T00:21:31Z" finished-at="2017-11-30T00:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchDeviceType -->
        <test-method status="PASS" signature="searchInvalidST()[pri:0, instance:example.controlpoint.SearchExecuteTest@286778]" name="searchInvalidST" duration-ms="95" started-at="2017-11-30T00:21:32Z" finished-at="2017-11-30T00:21:32Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Given search target instance is not a valid header class for type ST: class org.fourthline.cling.model.message.header.MXHeader]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Given search target instance is not a valid header class for type ST: class org.fourthline.cling.model.message.header.MXHeader
	at org.fourthline.cling.protocol.async.SendingSearch.<init>(SendingSearch.java:66)
	at org.fourthline.cling.protocol.async.SendingSearch.<init>(SendingSearch.java:55)
	at example.controlpoint.SearchExecuteTest.searchInvalidST(SearchExecuteTest.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchInvalidST -->
        <test-method status="PASS" signature="searchRoot()[pri:0, instance:example.controlpoint.SearchExecuteTest@286778]" name="searchRoot" duration-ms="98" started-at="2017-11-30T00:21:32Z" finished-at="2017-11-30T00:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchRoot -->
        <test-method status="PASS" signature="searchServiceType()[pri:0, instance:example.controlpoint.SearchExecuteTest@286778]" name="searchServiceType" duration-ms="98" started-at="2017-11-30T00:21:32Z" finished-at="2017-11-30T00:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchServiceType -->
        <test-method status="PASS" signature="searchUDN()[pri:0, instance:example.controlpoint.SearchExecuteTest@286778]" name="searchUDN" duration-ms="99" started-at="2017-11-30T00:21:32Z" finished-at="2017-11-30T00:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchUDN -->
      </class> <!-- example.controlpoint.SearchExecuteTest -->
      <class name="example.localservice.StringConvertibleTest">
        <test-method status="PASS" signature="invokeActions(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.localservice.StringConvertibleTest@c273d3]" name="invokeActions" duration-ms="1" started-at="2017-11-30T00:21:32Z" data-provider="devices" finished-at="2017-11-30T00:21:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeActions -->
        <test-method status="PASS" signature="validateBinding(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.localservice.StringConvertibleTest@c273d3]" name="validateBinding" duration-ms="0" started-at="2017-11-30T00:21:32Z" data-provider="devices" finished-at="2017-11-30T00:21:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBinding -->
      </class> <!-- example.localservice.StringConvertibleTest -->
      <class name="example.registry.RegistryListenerTest">
        <test-method status="PASS" signature="failureQuickstartListener()[pri:0, instance:example.registry.RegistryListenerTest@bca1e0]" name="failureQuickstartListener" duration-ms="111" started-at="2017-11-30T00:21:32Z" finished-at="2017-11-30T00:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureQuickstartListener -->
        <test-method status="PASS" signature="quickstartListener()[pri:0, instance:example.registry.RegistryListenerTest@bca1e0]" name="quickstartListener" duration-ms="129" started-at="2017-11-30T00:21:32Z" finished-at="2017-11-30T00:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quickstartListener -->
        <test-method status="PASS" signature="regularListener()[pri:0, instance:example.registry.RegistryListenerTest@bca1e0]" name="regularListener" duration-ms="130" started-at="2017-11-30T00:21:32Z" finished-at="2017-11-30T00:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regularListener -->
      </class> <!-- example.registry.RegistryListenerTest -->
      <class name="example.controlpoint.EventSubscriptionTest">
        <test-method status="PASS" signature="subscriptionLifecycle()[pri:0, instance:example.controlpoint.EventSubscriptionTest@32be31]" name="subscriptionLifecycle" duration-ms="99" started-at="2017-11-30T00:21:31Z" finished-at="2017-11-30T00:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subscriptionLifecycle -->
      </class> <!-- example.controlpoint.EventSubscriptionTest -->
      <class name="example.controlpoint.ActionCancellationTest">
        <test-method status="PASS" signature="invokeActions(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.controlpoint.ActionCancellationTest@17b4f4c]" name="invokeActions" duration-ms="1099" started-at="2017-11-30T00:21:28Z" data-provider="devices" finished-at="2017-11-30T00:21:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeActions -->
      </class> <!-- example.controlpoint.ActionCancellationTest -->
      <class name="example.binarylight.BinaryLightTest">
        <test-method status="PASS" signature="testClient()[pri:0, instance:example.binarylight.BinaryLightTest@1a5fe33]" name="testClient" duration-ms="299" started-at="2017-11-30T00:21:29Z" finished-at="2017-11-30T00:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClient -->
        <test-method status="PASS" signature="testServer()[pri:0, instance:example.binarylight.BinaryLightTest@1a5fe33]" name="testServer" duration-ms="135" started-at="2017-11-30T00:21:29Z" finished-at="2017-11-30T00:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testServer -->
      </class> <!-- example.binarylight.BinaryLightTest -->
      <class name="example.controlpoint.ActionInvocationTest">
        <test-method status="PASS" signature="invokeActions(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.controlpoint.ActionInvocationTest@398b7c]" name="invokeActions" duration-ms="100" started-at="2017-11-30T00:21:29Z" data-provider="devices" finished-at="2017-11-30T00:21:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeActions -->
        <test-method status="PASS" signature="invokeActions(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.controlpoint.ActionInvocationTest@398b7c]" name="invokeActions" duration-ms="99" started-at="2017-11-30T00:21:29Z" data-provider="devices" finished-at="2017-11-30T00:21:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeActions -->
        <test-method status="PASS" signature="invokeActions(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.controlpoint.ActionInvocationTest@398b7c]" name="invokeActions" duration-ms="99" started-at="2017-11-30T00:21:30Z" data-provider="devices" finished-at="2017-11-30T00:21:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeActions -->
        <test-method status="PASS" signature="invokeActionsWithAlias(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.controlpoint.ActionInvocationTest@398b7c]" name="invokeActionsWithAlias" duration-ms="98" started-at="2017-11-30T00:21:30Z" data-provider="devices" finished-at="2017-11-30T00:21:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeActionsWithAlias -->
        <test-method status="PASS" signature="invokeActionsWithAlias(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.controlpoint.ActionInvocationTest@398b7c]" name="invokeActionsWithAlias" duration-ms="100" started-at="2017-11-30T00:21:30Z" data-provider="devices" finished-at="2017-11-30T00:21:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeActionsWithAlias -->
        <test-method status="PASS" signature="invokeActionsWithAlias(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.controlpoint.ActionInvocationTest@398b7c]" name="invokeActionsWithAlias" duration-ms="99" started-at="2017-11-30T00:21:30Z" data-provider="devices" finished-at="2017-11-30T00:21:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeActionsWithAlias -->
      </class> <!-- example.controlpoint.ActionInvocationTest -->
      <class name="example.localservice.AllowedValueRangeTest">
        <test-method status="PASS" signature="validateBinding(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.localservice.AllowedValueRangeTest@7740a2]" name="validateBinding" duration-ms="0" started-at="2017-11-30T00:21:32Z" data-provider="devices" finished-at="2017-11-30T00:21:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBinding -->
        <test-method status="PASS" signature="validateBinding(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.localservice.AllowedValueRangeTest@7740a2]" name="validateBinding" duration-ms="0" started-at="2017-11-30T00:21:32Z" data-provider="devices" finished-at="2017-11-30T00:21:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBinding -->
      </class> <!-- example.localservice.AllowedValueRangeTest -->
      <class name="example.localservice.EnumTest">
        <test-method status="PASS" signature="invokeActions(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.localservice.EnumTest@1c6f14e]" name="invokeActions" duration-ms="0" started-at="2017-11-30T00:21:29Z" data-provider="devices" finished-at="2017-11-30T00:21:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeActions -->
        <test-method status="PASS" signature="validateBinding(org.fourthline.cling.model.meta.LocalDevice)[pri:0, instance:example.localservice.EnumTest@1c6f14e]" name="validateBinding" duration-ms="0" started-at="2017-11-30T00:21:29Z" data-provider="devices" finished-at="2017-11-30T00:21:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(LocalDevice) Identity: (DeviceIdentity) UDN: uuid:MY-DEVICE-123, Root: true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBinding -->
      </class> <!-- example.localservice.EnumTest -->
    </test> <!-- Examples -->
    <test name="Transport" duration-ms="0" started-at="2017-11-29T17:21:32Z" finished-at="2017-11-29T17:21:32Z">
    </test> <!-- Transport -->
  </suite> <!-- Cling Core - All Tests -->
</testng-results>
